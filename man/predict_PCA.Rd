% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCA.R
\name{predict_PCA}
\alias{predict_PCA}
\title{PCA prediction by projecting query/test samples onto PCA of reference/train samples}
\usage{
predict_PCA(
  train,
  test,
  scale = FALSE,
  varimax = FALSE,
  train_name = "Train",
  train_anno = NULL,
  train_annoname = NULL,
  train_annotype = NULL,
  train_colors = NULL,
  test_name = "Test",
  test_anno = NULL,
  test_annoname = NULL,
  test_annotype = NULL,
  test_colors = NULL,
  ellipse = FALSE,
  label = FALSE,
  savedir = NULL,
  height = 8,
  width = 8,
  fmt = "png",
  test_only_plt = FALSE
)
}
\arguments{
\item{train}{string/df; filepath to/df of reference/train samples data, genes/features as rownames, samples/observations as colnames}

\item{test}{string/df; filepath to/df of query/test samples data, genes/features as rownames, samples/observations as colnames}

\item{scale}{logical; T to scale variables to unit variance}

\item{varimax}{logical; T to perform varimax rotation on train + test}

\item{train_name}{string; descriptor for train samples}

\item{train_anno}{df; annotation info for train samples}

\item{train_annoname}{string; colname in \code{train_anno} matching point name}

\item{train_annotype}{string; colname in \code{train_anno} with info to color by}

\item{train_colors}{char vector; list of colors, length = # of unique \code{train_annotype}}

\item{test_name}{string; descriptor for test samples}

\item{test_anno}{df; annotation info for test samples}

\item{test_annoname}{string; colname in \code{test_anno} matching point name}

\item{test_annotype}{string; colname in \code{test_anno} with info to color by}

\item{test_colors}{char vector; list of colors, length = # of unique \code{test_annotype}}

\item{ellipse}{logical (vector); can do length 2, \code{ellipse[1]} for train data ellipse, \code{ellipse[2]} for test data ellipse}

\item{label}{logical (vector); can do length 2, \code{label[1]} for train data label, \code{label[2]} for test data label}

\item{savedir}{string; directory (+ prefix) to save output under; if directory, end string with "/"}

\item{height}{numeric; plot height}

\item{width}{numeric; plot width}

\item{fmt}{string; plot output format (ex. "png", "pdf")}

\item{test_only_plt}{logical; save scatter of projected test samples only}
}
\value{
ggplot object
}
\description{
Plot titles are automatically constructed based on parameters. Adding a \code{savedir} argument will result in intermediate plots and final projected scores to be output.
}
\examples{
library(dplyr)
data(iris)
iris$Sample <- rownames(iris)
set.seed(13)
samp <- sample(nrow(iris), nrow(iris)*0.75) # Train data is 75\% of iris
iris_train <- iris[samp,] \%>\%
  mutate(Batch = "Train",
         Species = paste0(Species, "_Train"))
iris_test <- iris[-samp,] \%>\%
  mutate(Batch = "Test",
         Species = paste0(Species, "_Test"))
Rubrary::predict_PCA(
  train = t(iris_train[,1:4]),
  test = t(iris_test[,1:4]),
  train_name = "Iris Train", train_anno = iris_train[,c("Sample", "Species")],
  train_annoname = "Sample", train_annotype = "Species",
  train_colors = c("pink", "red", "darkred"),
  test_name = "Iris Test", test_anno = iris_test[,c("Sample", "Species")],
  test_annoname = "Sample", test_annotype = "Species",
  test_colors = c("lightskyblue", "blue", "navy"),
  ellipse = c(FALSE, TRUE), label = FALSE
)

}
\seealso{
\code{\link[=run_PCA]{run_PCA()}}, \code{\link[=plot_PCA]{plot_PCA()}}, \code{\link[=rotate_varimax]{rotate_varimax()}}
}
