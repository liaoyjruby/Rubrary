% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCA.R
\name{run_PCA}
\alias{run_PCA}
\title{Run PCA (\code{prcomp} wrapper)}
\usage{
run_PCA(
  df,
  savename = NULL,
  summary = FALSE,
  center = TRUE,
  scale = FALSE,
  tol = 0.05,
  rank = NULL,
  screeplot = TRUE
)
}
\arguments{
\item{df}{(path to) numeric dataframe; samples as columns, genes/features as rows}

\item{savename}{string; filepath (no ext.) to save PCA scores, loadings, sdev under}

\item{summary}{logical; output summary info}

\item{center}{logical; indicate whether the variables should be shifted to be zero centered}

\item{scale}{logical; indicate whether the variables should be scaled to have unit variance}

\item{tol}{numeric; indicate the magnitude below which components should be omitted}

\item{rank}{integer; a number specifying the maximal rank, i.e., maximal number of principal components to be used}

\item{screeplot}{logical; output + save screeplot?}
}
\value{
prcomp obj
}
\description{
Adapted from \code{glab.library::PCA_from_file}.
}
\details{
In general, Z-score standardization (\code{center = T}; \code{scale = T}) before PCA is advised. For (transformed) gene expression data, genearlly, center but don't scale.

\code{center = T}: PCA maximizes the sum-of-squared deviations \emph{from the origin} in the first PC. Variance is only maximized if the data is pre-centered.

\code{scale = T}: If one feature varies more than others, the feature will dominate resulting principal components. Scaling will also result in components in the same order of magnitude.

Use either \code{tol} or \code{rank}, but not both.
}
\examples{
data(iris)
Rubrary::run_PCA(t(iris[,c(1:4)]))

}
\seealso{
\code{\link[stats:prcomp]{stats::prcomp()}}, \code{\link[=plot_PCA]{plot_PCA()}}
}
