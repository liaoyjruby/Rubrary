[{"path":"https://liaoyjruby.github.io/Rubrary/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Rubrary authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/DE_Genes.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Differential Gene Expression","text":"","code":"library(Rubrary) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(tibble)  # For `airway` install r = getOption(\"repos\") r[\"CRAN\"] = \"http://cran.us.r-project.org\" options(repos = r)"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/DE_Genes.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Differential Gene Expression","text":"example dataset vignette comes paper [1] : Himes et al. (2014). “RNA-Seq Transcriptome Profiling Identifies CRISPLD2 Glucocorticoid Responsive Gene Modulates Cytokine Function Airway Smooth Muscle Cells.” PLoS ONE, 9(6), e99625. https://doi.org/10.1371/journal.pone.0099625. abstract: Using RNA-Seq, high-throughput sequencing method, characterized transcriptomic changes four primary human ASM cell lines treated dexamethasone—potent synthetic glucocorticoid (1 µM 18 hours). experiment performed human airway smooth muscle (ASM) cells. Glucocorticoids commonly used drug treat asthma anti-inflammatory effects lung tissue. goal experiment characterize mechanism glucocorticoid inflammation suppression RNAseq. Himes et al. found number glucocorticoid-responsive genes DUSP1 CRISPLD2. also identified enrichment functional annotation terms “glycoprotein/extracellular matrix”, “vasculature development”, “circulatory system process”. original paper, authors used Cuffdiff 2 find differential gene expression used NIH Database Annotation, Visualization, Integrated Discovery (DAVID) gene set enrichment analysis.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/DE_Genes.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load data","title":"Differential Gene Expression","text":"package airway contains data Himes et al. paper form RangedSummarizedExperiment object hosted Bioconductor.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/DE_Genes.html","id":"get-airway-data-from-package","dir":"Articles","previous_headings":"Load data","what":"Get airway data from package","title":"Differential Gene Expression","text":"","code":"if (!requireNamespace(\"airway\", quietly = TRUE)){   BiocManager::install(\"airway\") }  library(airway) #> Warning: replacing previous import 'S4Arrays::makeNindexFromArrayViewport' by #> 'DelayedArray::makeNindexFromArrayViewport' when loading 'SummarizedExperiment' data(airway)"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/DE_Genes.html","id":"get-counts-and-sample-annotation","dir":"Articles","previous_headings":"Load data","what":"Get counts and sample annotation","title":"Differential Gene Expression","text":"gene expression data represented counts. 4 samples treated dexamethasone (anno$dex == \"trt\") 4 untreated samples (anno$dex == \"untrt\").","code":"# Counts cts <- assay(airway, \"counts\") # Annotation anno <- colData(airway) %>%   as.data.frame() anno$dex <- relevel(anno$dex, \"untrt\") # Set untreated as first factor  rmarkdown::paged_table(data.frame(cts)) rmarkdown::paged_table(anno)"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/DE_Genes.html","id":"visualize-samples-w-pca","dir":"Articles","previous_headings":"Load data","what":"Visualize samples w/ PCA","title":"Differential Gene Expression","text":"","code":"# log2UQ # Rubrary::run_PCA # Rubrary::plot_PCA"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/DE_Genes.html","id":"deseq2-differentially-expressed-genes","dir":"Articles","previous_headings":"","what":"DESeq2 differentially expressed genes","title":"Differential Gene Expression","text":"DESeq2 [2] performs differential gene expression analysis modeling counts negative binomial distribution.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/DE_Genes.html","id":"create-deseqdataset-object-and-run-deseq","dir":"Articles","previous_headings":"DESeq2 differentially expressed genes","what":"Create DESeqDataSet object and run DESeq","title":"Differential Gene Expression","text":"DESeq2::results documentation, contrast argument can formatted : character vector exactly three elements: name factor design formula, name numerator level fold change, name denominator level fold change (simplest case) Thus, fold change per gene results represents change dex condition, \\(FC = \\frac{\\text{trt}}{\\text{untrt}}\\). \\(FC > 1\\) results \\(\\log(FC) > 0\\), increase gene expression treated samples relative untreated samples. Rubrary::output_DESeq takes DESeqResults object, transforms dataframe, adds sign log2 p-value column.","code":"library(DESeq2)  dds <- DESeqDataSetFromMatrix(   countData = cts[,rownames(anno)],   colData = anno,   design = ~ dex)  dds <- DESeq(dds) #> estimating size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing res <- results(dds, contrast = c(\"dex\", \"trt\", \"untrt\")) deseq_res_df <- Rubrary::output_DESeq(res)"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/DE_Genes.html","id":"replace-ensembl-id-w-hgnc-symbol","dir":"Articles","previous_headings":"DESeq2 differentially expressed genes > Create DESeqDataSet object and run DESeq","what":"Replace Ensembl ID w/ HGNC symbol","title":"Differential Gene Expression","text":"airway gene names given Ensembl ID, HGNC gene symbols can easier interpret downstream analysis compatible gene set enrichment analysis (GSEA) tools.","code":"# Gene format is currently in Ensembl ID format head(deseq_res_df$gene) #> [1] \"ENSG00000152583\" \"ENSG00000148175\" \"ENSG00000179094\" \"ENSG00000134686\" #> [5] \"ENSG00000125148\" \"ENSG00000120129\"  library(biomaRt) # Load Mart object - database of Homo sapiens genes from Ensembl mart <- biomaRt::useDataset(   dataset = \"hsapiens_gene_ensembl\",   mart = biomaRt::useMart(\"ENSEMBL_MART_ENSEMBL\",                           host=\"https://useast.ensembl.org\"))  conv <- Rubrary::convert_genes(     genes = deseq_res_df$gene,     from_to = c(\"ensembl_gene_id\", \"hgnc_symbol\"),     mart = mart, table = T) %>%   filter(hgnc_symbol != \"\") %>% # Exclude unmatched HGNC symbols   distinct(hgnc_symbol, .keep_all = T)  deseq_res_hgnc <- dplyr::left_join( # Join stats with HGNC symbol table   conv, deseq_res_df, by = join_by(ensembl_gene_id == gene)) %>%   arrange(desc(sign_log_p))  # Genes now have associated HGNC symbols rmarkdown::paged_table(deseq_res_hgnc)"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/DE_Genes.html","id":"filter-to-protein-coding-genes","dir":"Articles","previous_headings":"DESeq2 differentially expressed genes","what":"Filter to protein coding genes","title":"Differential Gene Expression","text":"ease interpretation, DE genes results can also filtered protein coding genes . Rubrary::filter_genes() can filter list protein coding genes retrieved Rubrary::get_PC_genes(). Since already created Mart object converting gene symbols, can reuse avoid querying BioMart database load protein coding genes efficiently.","code":"deseq_res_hgnc_PC <- Rubrary::filter_genes(   df = deseq_res_hgnc,   gene_col = \"hgnc_symbol\",   genes_filt = Rubrary::get_PC_genes(mart) )"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/DE_Genes.html","id":"volcano-plot","dir":"Articles","previous_headings":"DESeq2 differentially expressed genes","what":"Volcano plot","title":"Differential Gene Expression","text":"DESeq results can visualized volcano plots. Volcano plots show top bottom differentially expressed genes sorted decreasing signed log p value present outliers top right top left.","code":"rmarkdown::paged_table(   head(deseq_res_hgnc_PC[order(deseq_res_hgnc_PC$sign_log_p, decreasing = T),])) rmarkdown::paged_table(   tail(deseq_res_hgnc_PC[order(deseq_res_hgnc_PC$sign_log_p, decreasing = T),])) Rubrary::plot_volcano(   df_deg = deseq_res_hgnc_PC,   names = \"hgnc_symbol\",   x = \"log2FoldChange\", y = \"pvalue\",   FCcutoff = 1, pCutoff = 5e-04,   title = \"Airway Treated vs. Untreated DE Genes\",   xlab_high = \"\\U2191 in treated\\n\\U2193 in untreated\",   xlab_low = \"\\U2191 in untreated\\n\\U2193 in treated\",   subtitle = \"Protein coding genes\" )"},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/articles/GSEA.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Gene Set Enrichment Analysis (GSEA)","text":"continuation “Differential Gene Expression” vignette loads airway DESeq2 results investigate gene sets.","code":"library(Rubrary) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(tibble) data(\"airway_deseq_res\") rmarkdown::paged_table(airway_deseq_res)"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/GSEA.html","id":"fgsea-gene-set-enrichment-analysis","dir":"Articles","previous_headings":"","what":"fgsea Gene Set Enrichment Analysis","title":"Gene Set Enrichment Analysis (GSEA)","text":"fgsea [1] implementation algorithm fast gene set enrichment analysis (GSEA), based original GSEA algorithm [2].","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/GSEA.html","id":"get-pathways-from-msigdbr","dir":"Articles","previous_headings":"fgsea Gene Set Enrichment Analysis","what":"Get pathways from msigdbr","title":"Gene Set Enrichment Analysis (GSEA)","text":"Gene set enrichment analysis relies inputting gene sets / pathways related biological function. Molecular Signatures Database (MSigDB) [3] published database annotated pathways facilitate GSEA accessible R package msigdbr [4]. Human MSigDB Collections C2CP: curated gene sets, canonical pathways C5GO: ontology gene sets, Gene Ontology gene sets BP: GO Biological Process ontology CC: GO Cellular Component ontology MF: GO Molecular Function ontology H: hallmark gene sets [5]","code":"if (!requireNamespace(\"msigdbr\", quietly = TRUE)){   BiocManager::install(\"msigdbr\") }  rmarkdown::paged_table(msigdbr::msigdbr_collections()) pthwys <- rbind(   msigdbr::msigdbr(category = \"C2\", subcategory = \"CP\"),   msigdbr::msigdbr(category = \"C5\", subcategory = \"GO:BP\"),   msigdbr::msigdbr(category = \"C5\", subcategory = \"GO:CC\"),   msigdbr::msigdbr(category = \"C5\", subcategory = \"GO:MF\"),   msigdbr::msigdbr(category = \"H\") ) %>%   split(x = .$gene_symbol, f = .$gs_name) # Named list of pathways"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/GSEA.html","id":"run-fgsea","dir":"Articles","previous_headings":"fgsea Gene Set Enrichment Analysis","what":"Run fgsea","title":"Gene Set Enrichment Analysis (GSEA)","text":"See GSEA User Guide: Interpreting GSEA Results detailed explanation interpreting results.","code":"# `fgsea` requires a named numeric vector as input to the `stats` argument deseq_stats <- setNames(     airway_deseq_res[,\"sign_log_p\"],      airway_deseq_res[,\"hgnc_symbol\"] )  gsea_results <- fgsea::fgsea(   pathways = pthwys,   stats = deseq_stats,   eps = 0.0,   minSize = 15,   maxSize  = 500) %>%   arrange(desc(NES)) %>%   mutate(sign_log10_p = sign(NES) * -log10(pval)) # Create sign_log10_p column #> Warning in preparePathwaysAndStats(pathways, stats, minSize, maxSize, gseaParam, : There are ties in the preranked stats (6.92% of the list). #> The order of those tied genes will be arbitrary, which may produce unexpected results.  rmarkdown::paged_table(gsea_results)"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/GSEA.html","id":"visualize-gsea-results-as-a-table","dir":"Articles","previous_headings":"fgsea Gene Set Enrichment Analysis","what":"Visualize GSEA results as a table","title":"Gene Set Enrichment Analysis (GSEA)","text":"Using fgsea’s plotGseaTable function.  Using Rubrary::plot_GSEA_barplot function - simpler visualization GSEA NES values bit nicer looking?","code":"# Get top significant pathways by positive/negative enrichment score (ES) pos_pws <- gsea_results[ES > 0][head(order(pval), n = 5), pathway] neg_pws <- gsea_results[ES < 0][head(order(pval), n = 5), pathway] top_pws <- c(pos_pws, rev(neg_pws))  fgsea::plotGseaTable(   pathways = pthwys[top_pws],   stats = deseq_stats,   fgseaRes = gsea_results,   gseaParam = 0.5 ) Rubrary::plot_GSEA_barplot(   gsea_res = gsea_results,   n_pws = 5, NES_cutoff = 1.5,   pw_format = TRUE,   colors = c(\"red\", \"blue\"),   title = \"Airway GSEA\" )"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/GSEA.html","id":"pathway-enrichment-plot","dir":"Articles","previous_headings":"fgsea Gene Set Enrichment Analysis","what":"Pathway enrichment plot","title":"Gene Set Enrichment Analysis (GSEA)","text":"Specific pathways interest can plotted GSEA Java app-like enrichment plots combine waterfall mountain plot. top enriched pathway GSEA results “HALLMARK_ADIPOGENESIS”, collection 196 genes -regulated adipocyte (fat cell) differentiation. line studies reporting complex effects glucocorticoids adipose tissue biology, including differentiation adipocyte precursors adipogenesis [6,7]. maximum absolute value Enrichment Score mountain plot corresponds ES value reported GSEA results.  smaller gene sets, like 20-gene pathway “GOBP_NEURON_FATE_SPECIFICATION”, labeling gene may appropriate.  Multiple gene set enrichment plots can created batch Rubrary::plot_GSEA_batch, wrapper Rubrary::plot_GSEA_pathway works well lapply. can use neg_pws list pathway names plot gene enrichment plots significant negatively enriched pathways.","code":"rmarkdown::paged_table(   gsea_results[gsea_results$pathway == \"HALLMARK_ADIPOGENESIS\",]) Rubrary::plot_GSEA_pathway(   sig = airway_deseq_res,   geneset = pthwys[[\"HALLMARK_ADIPOGENESIS\"]],   genecol = \"hgnc_symbol\",   rankcol = \"sign_log_p\",   rankcol_name = \"DESeq sign log2 p-value\",   label = FALSE,   title = \"Airway DE Genes: HALLMARK_ADIPOGENESIS\",   lab_high = \"\\U2191 in treated\\n\\U2193 in untreated\",   lab_low = \"\\U2191 in untreated\\n\\U2193 in treated\" ) rmarkdown::paged_table(   gsea_results[gsea_results$pathway == \"GOBP_NEURON_FATE_SPECIFICATION\",]) Rubrary::plot_GSEA_pathway(   sig = airway_deseq_res,   geneset = pthwys[[\"GOBP_NEURON_FATE_SPECIFICATION\"]],   genecol = \"hgnc_symbol\",   rankcol = \"sign_log_p\",   rankcol_name = \"DESeq sign log2 p-value\",   label = TRUE,   title = \"Airway DE Genes: GOBP_NEURON_FATE_SPECIFICATION\",   lab_high = \"\\U2191 in treated\\n\\U2193 in untreated\",   lab_low = \"\\U2191 in untreated\\n\\U2193 in treated\" ) #> Warning: Removed 16440 rows containing missing values #> (`geom_text_repel()`). rmarkdown::paged_table(   gsea_results[gsea_results$pathway %in% neg_pws[1:3],]) lapply(   neg_pws[1:3],   FUN = Rubrary::plot_GSEA_pathway_batch,   genecol = \"hgnc_symbol\",   pthwys = pthwys,   sig = airway_deseq_res,   rankcol = \"sign_log_p\",   rankcol_name = \"DESeq sign log2 p-value\",   hllab = \"Pathway genes\",   lab_high = \"\\U2191 in treated\\n\\U2193 in untreated\",   lab_low = \"\\U2191 in untreated\\n\\U2193 in treated\" ) #> [[1]] #>  #> [[2]] #>  #> [[3]]"},{"path":[]},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Quickstart.html","id":"beltran-et-al--2016-pca","dir":"Articles","previous_headings":"","what":"Beltran et al. 2016 PCA","title":"Principal Component Analysis (PCA) Quickstart","text":"replicates PCA portions graeberlab-ucla/glab.library PCA tutorial using Beltran et al. 2016(Beltran et al. 2016) CRPC/NEPC data initiate many new computational Graeber Lab members lab.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Quickstart.html","id":"load-data","dir":"Articles","previous_headings":"Beltran et al. 2016 PCA","what":"Load data","title":"Principal Component Analysis (PCA) Quickstart","text":"Raw text files can loaded read.delim passing URL.","code":"# Upper quartile normalized log2 transformed gene counts Beltran_log2UQ_exp <- read.delim(\"https://raw.githubusercontent.com/graeberlab-ucla/glab.library/master/vignettes/PCA_tutorial/Beltran_2016_rsem_genes_upper_norm_counts_coding_log2.txt\", row.names = 1)  rmarkdown::paged_table(Rubrary::corner(Beltran_log2UQ_exp))"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Quickstart.html","id":"run-pca","dir":"Articles","previous_headings":"Beltran et al. 2016 PCA","what":"Run PCA","title":"Principal Component Analysis (PCA) Quickstart","text":"Generally, scaling unnecessary log transformed gene expression features (genes) unit measure assumed scales relatively similar across genes. Centering always performed PCA result maximizing variance. See Standardization section PCA Walkthrough info.","code":"Beltran_PCA <- Rubrary::run_PCA(   df = Beltran_log2UQ_exp,   center = TRUE, scale = FALSE ) #> ** Cumulative var. exp. >= 80% at PC 18 (80.5%)"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Quickstart.html","id":"plot-pca","dir":"Articles","previous_headings":"Beltran et al. 2016 PCA","what":"Plot PCA","title":"Principal Component Analysis (PCA) Quickstart","text":"annotations huge file associating large number samples cancer type abbreviation. dataset, samples correspond “CRPC”, castration resistant prostate cancer, “NEPC”, neuroendocrine prostate cancer. NEPC CRPC samples separate pretty nicely along PC2.","code":"# Annotation file Beltran_info <- read.delim(\"https://raw.githubusercontent.com/graeberlab-ucla/glab.library/master/vignettes/PCA_tutorial/human.info.rsem.expression.txt\")  head(Beltran_info) #>            sample type #> 1 TCGA.05.4244.01 LUAD #> 2 TCGA.05.4249.01 LUAD #> 3 TCGA.05.4250.01 LUAD #> 4 TCGA.05.4382.01 LUAD #> 5 TCGA.05.4384.01 LUAD #> 6 TCGA.05.4389.01 LUAD Rubrary::plot_PCA(   df_pca = Beltran_PCA,   type = \"Scores\",   anno = Beltran_info,   annoname = \"sample\",   annotype = \"type\",   density = T, ellipse = T )"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Quickstart.html","id":"varimax-rotation","dir":"Articles","previous_headings":"Beltran et al. 2016 PCA","what":"Varimax rotation","title":"Principal Component Analysis (PCA) Quickstart","text":"","code":"Beltran_PCA_VM <- Rubrary::rotate_varimax(Beltran_PCA, normalize = FALSE)  # Visualize scores Rubrary::plot_PCA(   df_pca = Beltran_PCA_VM$scores,   PCx = \"V1\", PCy = \"V2\",   title = \"Beltran 2016 PCA Scores (Varimax)\",   type = \"Scores\",   anno = Beltran_info,   annoname = \"sample\",   annotype = \"type\",   density = T, ellipse = T )"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Quickstart.html","id":"palmer-penguins-pca","dir":"Articles","previous_headings":"","what":"Palmer Penguins PCA","title":"Principal Component Analysis (PCA) Quickstart","text":"Using palmerpenguins dataset Allison Horst.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Quickstart.html","id":"load-data-1","dir":"Articles","previous_headings":"Palmer Penguins PCA","what":"Load data","title":"Principal Component Analysis (PCA) Quickstart","text":"Get palmerpenguins data add unique ID per entry.","code":"if (!requireNamespace(\"palmerpenguins\", quietly = TRUE)){   install.packages(\"palmerpenguins\") } library(palmerpenguins)  penguins <- penguins %>%   as.data.frame() %>%   mutate(Sample_ID = paste0(penguins_raw$`Individual ID`, \"_\", penguins_raw$`Sample Number`))    rownames(penguins) <- penguins$Sample_ID  rmarkdown::paged_table(penguins)"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Quickstart.html","id":"run-pca-1","dir":"Articles","previous_headings":"Palmer Penguins PCA","what":"Run PCA","title":"Principal Component Analysis (PCA) Quickstart","text":"Subset data numeric , run PCA.","code":"num <- penguins %>%   dplyr::select(!c(species, island, sex, year, Sample_ID)) %>%   t() %>%   as.data.frame() %>%   dplyr::select(where(~!all(is.na(.x)))) # Filter out NAs    pca <- Rubrary::run_PCA(   df = num,   summary = T, tol = 0,   center = T, scale = T,   screeplot = T ) #> ** Cumulative var. exp. >= 80% at PC 2 (88.2%)"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Quickstart.html","id":"plot-pca-1","dir":"Articles","previous_headings":"Palmer Penguins PCA","what":"Plot PCA","title":"Principal Component Analysis (PCA) Quickstart","text":"Use resulting prcomp object plot PCA scores annotating species metadata.  PCA scores plot, annotating sex metadata.  Plotting biplot view (standardized) PCs loadings plot.","code":"Rubrary::plot_PCA(   df_pca = pca,   anno = penguins,   annoname = \"Sample_ID\",   annotype = \"species\",   title = \"Palmer Penguins PCA Scores - Species\",   label = FALSE,   density = TRUE ) Rubrary::plot_PCA(   df_pca = pca,   anno = penguins,   annoname = \"Sample_ID\",   annotype = \"sex\",   title = \"Palmer Penguins PCA Scores - Sex\",   label = FALSE,   density = TRUE ) Rubrary::plot_PCA_biplot(   obj = pca,   anno = penguins,   annoname = \"Sample_ID\",   annotype = \"species\",   title = \"Palmer Penguins PCA Biplot - Species\",   label = \"Loadings\" )"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Quickstart.html","id":"varimax-rotation-1","dir":"Articles","previous_headings":"Palmer Penguins PCA","what":"Varimax rotation","title":"Principal Component Analysis (PCA) Quickstart","text":"","code":"pca_vm <- Rubrary::rotate_varimax(pca)  # Visualize loadings Rubrary::plot_PCA(   df_pca = pca_vm$loadings,   PCx = \"V1\", PCy = \"V2\",   title = \"Palmer Penguins PCA Loadings (Varimax)\",   type = \"Loadings\",   label = TRUE ) # Visualize scores Rubrary::plot_PCA(   df_pca = pca_vm$scores,   PCx = \"V1\", PCy = \"V2\",   anno = penguins,   annoname = \"Sample_ID\",   annotype = \"species\",   title = \"Palmer Penguins PCA Scores (Varimax) - Species\",   label = FALSE,   density = TRUE,   type = \"Scores\" )"},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Principal Component Analysis (PCA) Walkthrough","text":"Heavily adapted Lindsay Smith’s PCA tutorial![1] HIGHLY recommend reading help develop intuitive understanding PCA, starting basic math prerequisites.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"why","dir":"Articles","previous_headings":"Background","what":"Why?","title":"Principal Component Analysis (PCA) Walkthrough","text":"Identify patterns high dimensional data Express data way highlight similarities + differences Patterns data “compressed” lower dimensions without much loss information Synonymous terms Dimension: feature, gene Sample: observation Adjusted: mean-adjusted, centered Scale: variance","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"variance","dir":"Articles","previous_headings":"Background > Statistics","what":"Variance","title":"Principal Component Analysis (PCA) Walkthrough","text":"Measure spread 1-dimensional data \\[var(X) = \\frac{\\Sigma_{=1}^n (X_i - \\bar{X})(X_i - \\bar{X})}{n-1}\\] \\(X_i\\): individual value \\(\\bar{X}\\): (sample) mean values \\(n\\): sample size","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"covariance","dir":"Articles","previous_headings":"Background > Statistics","what":"Covariance","title":"Principal Component Analysis (PCA) Walkthrough","text":"Found 2 dimensions Measure much dimensions vary mean respect \\(cov\\) btwn one dimension self variance \\(cov(X, Y) = cov(Y, X)\\) multiplication commutative \\[cov(X) = \\frac{\\Sigma_{=1}^n (X_i - \\bar{X})(Y_i - \\bar{Y})}{n-1}\\] Interpretation Positive: dimensions increase together Negative: one dimension increases, decreases Zero: two dimensions independent ","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"covariance-matrix","dir":"Articles","previous_headings":"Background > Statistics","what":"Covariance matrix","title":"Principal Component Analysis (PCA) Walkthrough","text":"\\(n\\)-dimensional set: \\(\\frac{n!}{(n-2)! \\cdot 2}\\) total pairwise covariance values Represent covariances covariance matrix \\[C^{n \\times n} = (c_{, j}, c_{, j} = cov(Dim_i, Dim_j))\\] \\(C^{n \\times n}\\): matrix w/ \\(n\\) rows & \\(n\\) columns (square) \\(Dim_x\\): \\(x\\)th dimension Entry \\((2, 3)\\) covariance matrix \\(cov(Dim_2, Dim_3)\\) Main diagonal: variance dimension Symmetrical main diagonal Ex. Covariance matrix 3 dimensions/features \\(x\\), \\(y\\), \\(z\\) \\[C = \\pmatrix{ cov(x,x) = var(x) & cov(x,y) & cov(x,z) \\\\ cov(y,x) & cov(y,y) = var(y) & cov(y,z) \\\\ cov(z,x) & cov(z,y) & cov(z,z) = var(z)}\\]","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"eigenvectors","dir":"Articles","previous_headings":"Background > Matrix algebra","what":"Eigenvectors","title":"Principal Component Analysis (PCA) Walkthrough","text":"“Direction” part PCA decomposition, angle orthogonal “rotation” PCA amounts . square matrices eigenvectors \\(n \\times n\\) matrix w/ eigenvectors, \\(n\\) eigenvectors Length vector doesn’t affect ’s eigenvector , direction keep eigenvector standard, usually scale length = 1 (unit length) Can express data terms eigenvectors, instead expressing terms \\(x\\) \\(y\\) axes Core concept PCA! Non-eigenvector: \\[\\pmatrix{2 & 3 \\\\ 2 & 1} \\times \\pmatrix{1 \\\\ 3} = \\pmatrix{11 \\\\ 5}\\] Eigenvector: \\[\\pmatrix{2 & 3 \\\\ 2 & 1} \\times \\pmatrix{3 \\\\ 2} = \\pmatrix{12 \\\\ 8} = 4 \\times \\pmatrix{3 \\\\ 2}\\] Scaled eigenvector still eigenvector: \\[2 \\times \\pmatrix{3 \\\\ 2} = \\pmatrix{6 \\\\ 4}\\] \\[\\pmatrix{2 & 3 \\\\ 2 & 1} \\times \\pmatrix{6 \\\\ 4} = \\pmatrix{24 \\\\ 16} = 4 \\times \\pmatrix{6 \\\\ 4}\\] Scaling eigenvector unit length: Eigenvector: \\(\\pmatrix{3 \\\\ 2}\\) -> Length = \\(\\sqrt{(3^2 + 2^2)} = \\sqrt{13}\\) -> Scaled: \\(\\pmatrix{3 \\\\ 2} \\div \\sqrt{13} = \\pmatrix{\\frac{3}{\\sqrt{13}} \\\\ \\frac{2}{\\sqrt{13}}}\\)","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"eigenvalues","dir":"Articles","previous_headings":"Background > Matrix algebra","what":"Eigenvalues","title":"Principal Component Analysis (PCA) Walkthrough","text":"“Scale” part PCA decomposition Amount original vector scaled multiplication square matrix eigendecomposition example, eigenvalue = 4 Usually eigenvectors found machine solving, eigenvalues also returned","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"general-steps","dir":"Articles","previous_headings":"","what":"General steps","title":"Principal Component Analysis (PCA) Walkthrough","text":"Get \\(n\\)-dimensional data set Standardize data Calculate covariance matrix Calculate eigenvectors + eigenvalues covariance matrix Choose components + form feature vector Derive new data set","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"d-pca-walkthrough","dir":"Articles","previous_headings":"","what":"2D PCA walkthrough","title":"Principal Component Analysis (PCA) Walkthrough","text":"Replicating Lindsay Smith’s PCA tutorial [1], step step.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"get-n-dimensional-data-set","dir":"Articles","previous_headings":"2D PCA walkthrough","what":"Get \\(n\\)-dimensional data set","title":"Principal Component Analysis (PCA) Walkthrough","text":"2-dimensional / 2 features \\(x\\) dimension & \\(y\\) dimension Visualize original, unadjusted data","code":"Data <- data.frame(   x = c(2.5, 0.5, 2.2, 1.9, 3.1, 2.3, 2, 1, 1.5, 1.1),   y = c(2.4, 0.7, 2.9, 2.2, 3.0, 2.7, 1.6, 1.1, 1.6, 0.9) ) Data #>      x   y #> 1  2.5 2.4 #> 2  0.5 0.7 #> 3  2.2 2.9 #> 4  1.9 2.2 #> 5  3.1 3.0 #> 6  2.3 2.7 #> 7  2.0 1.6 #> 8  1.0 1.1 #> 9  1.5 1.6 #> 10 1.1 0.9 Rubrary::plot_scatter(   df = Data,   xval = \"x\", yval = \"y\",   title = \"Figure 3.1: Original PCA Data\",   guides = F, cormethod = \"none\" ) +   geom_vline(xintercept = 0, linetype = \"dotted\", alpha = 0.25) +   geom_hline(yintercept = 0, linetype = \"dotted\", alpha = 0.25) +   scale_x_continuous(limits = c(-1, 4), expand = c(0, 0)) +   scale_y_continuous(limits = c(-1, 4), expand = c(0, 0))"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"standardize-adjust-data","dir":"Articles","previous_headings":"2D PCA walkthrough","what":"Standardize / adjust data","title":"Principal Component Analysis (PCA) Walkthrough","text":"\\(x - \\bar{x}\\), \\(y - \\bar{y}\\) Adjusted data set overall mean 0","code":"# Mean adjust / center DataAdjust <- Data %>%   scale(., center = T, scale = F) %>%   as.data.frame() DataAdjust #>        x     y #> 1   0.69  0.49 #> 2  -1.31 -1.21 #> 3   0.39  0.99 #> 4   0.09  0.29 #> 5   1.29  1.09 #> 6   0.49  0.79 #> 7   0.19 -0.31 #> 8  -0.81 -0.81 #> 9  -0.31 -0.31 #> 10 -0.71 -1.01"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"calculate-covariance-matrix","dir":"Articles","previous_headings":"2D PCA walkthrough","what":"Calculate covariance matrix","title":"Principal Component Analysis (PCA) Walkthrough","text":"","code":"# Covariance matrix cov_mtx <- cov(DataAdjust) cov_mtx #>           x         y #> x 0.6165556 0.6154444 #> y 0.6154444 0.7165556"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"eigendecomposition-of-covariance-matrix","dir":"Articles","previous_headings":"2D PCA walkthrough","what":"Eigendecomposition of covariance matrix","title":"Principal Component Analysis (PCA) Walkthrough","text":"Covariance matrix square -> can find eigenvectors + eigenvalues Eigenvectors unit eigenvectors","code":"# Eigenvalues eigenvalues = as.matrix(eigen(cov_mtx)$values) eigenvalues #>           [,1] #> [1,] 1.2840277 #> [2,] 0.0490834 # Eigenvectors eigenvectors = as.matrix(eigen(cov_mtx)$vectors) eigenvectors #>           [,1]       [,2] #> [1,] 0.6778734 -0.7351787 #> [2,] 0.7351787  0.6778734"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"choosing-components","dir":"Articles","previous_headings":"2D PCA walkthrough","what":"Choosing components","title":"Principal Component Analysis (PCA) Walkthrough","text":"2 dimensional data > \\(2 \\times 2\\) covariance matrix -> 2 eigenvectors Ordering eigenvectors highest lowest eigenvalues ordering significance larger dimensional data, can exclude uninformative / lower eigenvalue eigenvectors \\(FeatureVector = \\pmatrix{eig_1 & eig_2 & eig_3 & ... & eig_n}\\) Visualizing eigenvectors / PCs adjusted data Eigenvectors (colored dashed lines) perpendicular, lines characterize data Aligns maximum variance data, significant relationship btwn data dimensions 2nd largest eigenvalue PC2","code":"FeatureVector = cbind(eigenvectors[,1], eigenvectors[,2]) FeatureVector #>           [,1]       [,2] #> [1,] 0.6778734 -0.7351787 #> [2,] 0.7351787  0.6778734 Rubrary::plot_scatter(   df = DataAdjust, # Mean adjusted data   xval = \"x\", yval = \"y\",   title = \"Figure 3.2: Centered data w/ eigenvectors\",   guides = F, cormethod = \"none\" ) +   geom_vline(xintercept = 0, linetype = \"dotted\", alpha = 0.25) +   geom_hline(yintercept = 0, linetype = \"dotted\", alpha = 0.25) +   geom_abline(intercept = 0, linetype = \"dashed\", color = \"red\",               slope = eigenvectors[2,1] / eigenvectors[1,1]) + # EV 1 / PC1   geom_abline(intercept = 0, linetype = \"dashed\", color = \"blue\",               slope = eigenvectors[2,2] / eigenvectors[1,2]) + # EV 2 / PC2   scale_x_continuous(limits = c(-2, 2), expand = c(0, 0), breaks = seq(-2, 2, length.out = 9)) +   scale_y_continuous(limits = c(-2, 2), expand = c(0, 0), breaks = seq(-2, 2, length.out = 9))"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"deriving-new-data-set","dir":"Articles","previous_headings":"2D PCA walkthrough","what":"Deriving new data set","title":"Principal Component Analysis (PCA) Walkthrough","text":"final data (“scores”) can found using FeatureVector / selected eigenvectors rotate centered data. Visualizing final data PC1, now x-axis, along direction highest variance data PC2, now y-axis, orthogonal / perpendicular PC1 along direction 2nd highest variance data","code":"FinalData <- t(t(FeatureVector) %*% t(DataAdjust)) %>%   as.data.frame() %>%   dplyr::rename(PC1 = V1, PC2 = V2) FinalData #>            PC1         PC2 #> 1   0.82797019 -0.17511531 #> 2  -1.77758033  0.14285723 #> 3   0.99219749  0.38437499 #> 4   0.27421042  0.13041721 #> 5   1.67580142 -0.20949846 #> 6   0.91294910  0.17528244 #> 7  -0.09910944 -0.34982470 #> 8  -1.14457216  0.04641726 #> 9  -0.43804614  0.01776463 #> 10 -1.22382056 -0.16267529 PCA_scores_manual <- Rubrary::plot_scatter(   df = FinalData, # Mean adjusted data   xval = \"PC1\", yval = \"PC2\",   title = \"Figure 3.3: Data transformed with 2 eigenvectors\",   guides = F, cormethod = \"none\" ) +   geom_vline(xintercept = 0, linetype = \"dotted\", alpha = 0.25) +   geom_hline(yintercept = 0, linetype = \"dotted\", alpha = 0.25) +   scale_x_continuous(limits = c(-2, 2), expand = c(0, 0),                      breaks = seq(-2, 2, length.out = 9)) +   scale_y_continuous(limits = c(-2, 2), expand = c(0, 0),                      breaks = seq(-2, 2, length.out = 9)) PCA_scores_manual"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"transforming-back-to-original-data","dir":"Articles","previous_headings":"2D PCA walkthrough","what":"Transforming back to original data","title":"Principal Component Analysis (PCA) Walkthrough","text":"","code":"RowFinalData = t(FinalData) RowDataAdjust_1 = solve(t(FeatureVector)) %*% RowFinalData RowDataAdjust_1 #>      [,1]  [,2] [,3] [,4] [,5] [,6]  [,7]  [,8]  [,9] [,10] #> [1,] 0.69 -1.31 0.39 0.09 1.29 0.49  0.19 -0.81 -0.31 -0.71 #> [2,] 0.49 -1.21 0.99 0.29 1.09 0.79 -0.31 -0.81 -0.31 -1.01 RowDataAdjust_2 = FeatureVector %*% RowFinalData RowDataAdjust_2 #>      [,1]  [,2] [,3] [,4] [,5] [,6]  [,7]  [,8]  [,9] [,10] #> [1,] 0.69 -1.31 0.39 0.09 1.29 0.49  0.19 -0.81 -0.31 -0.71 #> [2,] 0.49 -1.21 0.99 0.29 1.09 0.79 -0.31 -0.81 -0.31 -1.01 # \"Uncenter\" by adding back original means OriginalMean = c(mean(Data[,1]), mean(Data[,2])) OriginalData = t(RowDataAdjust_2) %>%   as.data.frame() %>%   dplyr::rename(x = V1, y = V2) %>%   mutate(x = x + OriginalMean[1],          y = y + OriginalMean[2]) OriginalData #>      x   y #> 1  2.5 2.4 #> 2  0.5 0.7 #> 3  2.2 2.9 #> 4  1.9 2.2 #> 5  3.1 3.0 #> 6  2.3 2.7 #> 7  2.0 1.6 #> 8  1.0 1.1 #> 9  1.5 1.6 #> 10 1.1 0.9 # Visualize recovered data Rubrary::plot_scatter(   df = OriginalData,   xval = \"x\", yval = \"y\",   title = \"Recovered Original PCA Data\",   guides = F, cormethod = \"none\" ) +   geom_vline(xintercept = 0, linetype = \"dotted\", alpha = 0.25) +   geom_hline(yintercept = 0, linetype = \"dotted\", alpha = 0.25) +   scale_x_continuous(limits = c(-1, 4), expand = c(0, 0)) +   scale_y_continuous(limits = c(-1, 4), expand = c(0, 0))"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"rubrary","dir":"Articles","previous_headings":"2D PCA walkthrough","what":"Rubrary","title":"Principal Component Analysis (PCA) Walkthrough","text":"Rubrary::run_PCA wrapper stats::prcomp.","code":"PCA <- Rubrary::run_PCA(   df = t(Data), # 1 point per column   center = T, scale = F, tol = 0, screeplot = F ) # Visualize Rubrary::plot_PCA(   PCA,   title = \"PCA Scores\", ) +   geom_vline(xintercept = 0, linetype = \"dotted\", alpha = 0.25) +   geom_hline(yintercept = 0, linetype = \"dotted\", alpha = 0.25) +   scale_x_continuous(limits = c(-2, 2), expand = c(0, 0),                      breaks = seq(-2, 2, length.out = 9)) +   scale_y_continuous(limits = c(-2, 2), expand = c(0, 0),                      breaks = seq(-2, 2, length.out = 9))"},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"scores","dir":"Articles","previous_headings":"PCA output","what":"Scores","title":"Principal Component Analysis (PCA) Walkthrough","text":"Coordinates individuals (observations) principal components Original data orthogonally rotated eigenvector directions stats::prcomp, x output","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"loadings","dir":"Articles","previous_headings":"PCA output","what":"Loadings","title":"Principal Component Analysis (PCA) Walkthrough","text":"Eigenvectors “inoculated” w/ info variability magnitude rotated data Association coefficients components + variables Loadings: covariances/correlations btwn original variables + unit-scaled components Generally use loadings instead eigenvectors interpreting components stats::prcomp, can use rotation output scaled/multiplied sdev output square roots eigenvalues covariance/correlation matrix","code":"loadings <- obj_prcomp$rotation %*% diag(obj_prcomp$sdev)"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"links","dir":"Articles","previous_headings":"PCA output > Loadings","what":"Links","title":"Principal Component Analysis (PCA) Walkthrough","text":"Cross Validated: Loadings vs eigenvectors PCA: use one another? Cross Validated: proper association measure variable PCA component? Cross Validated: interpret PCA loadings?","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"biplots","dir":"Articles","previous_headings":"PCA output","what":"Biplots","title":"Principal Component Analysis (PCA) Walkthrough","text":"PCA: singular value decomposition \\[X = USV^\\intercal\\] Examples based iris dataset thread:","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"biplot-scores","dir":"Articles","previous_headings":"PCA output > Biplots","what":"Biplot scores","title":"Principal Component Analysis (PCA) Walkthrough","text":"Two first principal components plotted scatter plot, .e. first column \\(\\bf{U}\\) plotted second column. Possible normalizations: Columns \\(\\bf{U}\\): principal components scaled unit sum squares Columns \\(\\bf{U}\\sqrt{n - 1}\\): standardized principal components (unit variance) prcomp object x output","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"biplot-loadings","dir":"Articles","previous_headings":"PCA output > Biplots","what":"Biplot loadings","title":"Principal Component Analysis (PCA) Walkthrough","text":"Original variables plotted arrows; .e. \\((x, y)\\) coordinates \\(\\)-th arrow endpoint given \\(\\)-th value first second column \\(\\bf{V}\\). Possible normalizations: Columns \\(\\bf{VS}\\): valid interpretation obj_prcomp$sdev square root corresponding eigenvalues Squared length \\(\\approx\\) variance Scalar products two arrows \\(\\approx\\) covariance Cosines angles arrows \\(\\approx\\) correlations original variables prcomp object rotation output","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"links-1","dir":"Articles","previous_headings":"PCA output > Biplots","what":"Links","title":"Principal Component Analysis (PCA) Walkthrough","text":"Stack Exchange: Positioning arrows PCA biplot Stack Exchange: Arrows underlying variables PCA biplot R","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"standardization","dir":"Articles","previous_headings":"","what":"Standardization","title":"Principal Component Analysis (PCA) Walkthrough","text":"Center feature means 0 Scale variance per feature unit variance general, standardize data (Z-score normalize) PCA!","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"centering","dir":"Articles","previous_headings":"Standardization","what":"Centering","title":"Principal Component Analysis (PCA) Walkthrough","text":"Principal components inevitably come origin PCA maximizes variance data preliminarily centered","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"centering-example","dir":"Articles","previous_headings":"Standardization > Centering","what":"Centering example","title":"Principal Component Analysis (PCA) Walkthrough","text":"Using transformed version previous 2D data set emphasize effect Center / mean adjust Reflect across y-axis (positive -> negative correlation) Uncenter Scatter plot shows result transformation. Red guide line fitted linear regression line.","code":"Data2 <- Data %>%   scale(., center = T) %>%   as.data.frame() %>%   mutate(x = -1 * x) %>%   mutate(x = x + OriginalMean[1],          y = y + OriginalMean[2]) Data2 #>            x         y #> 1  0.9312548 2.4888568 #> 2  3.4783424 0.4805781 #> 3  1.3133179 3.0795270 #> 4  1.6953811 2.2525887 #> 5  0.1671285 3.1976611 #> 6  1.1859635 2.8432589 #> 7  1.5680267 1.5437845 #> 8  2.8415705 0.9531143 #> 9  2.2047986 1.5437845 #> 10 2.7142161 0.7168462 Rubrary::plot_scatter(   df = Data2,   xval = \"x\", yval = \"y\",   title = \"Transformed PCA Data\",   guides = T, cormethod = \"none\" ) +   geom_vline(xintercept = 0, linetype = \"dotted\", alpha = 0.25) +   geom_hline(yintercept = 0, linetype = \"dotted\", alpha = 0.25) +   scale_x_continuous(limits = c(-1, 4), expand = c(0, 0)) +   scale_y_continuous(limits = c(-1, 4), expand = c(0, 0))"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"pca-without-centering","dir":"Articles","previous_headings":"Standardization > Centering","what":"PCA without centering","title":"Principal Component Analysis (PCA) Walkthrough","text":"Plotting first eigenvector (dashed line) uncentered data shows 1st principal component piercing cloud points origin, along main direction cloud.","code":"PCA2_NoCenter <- Rubrary::run_PCA(   df = t(Data2), # 1 point per column   center = F, scale = F, tol = 0, screeplot = F ) # Extract eigenvectors evs_NoCenter <- PCA2_NoCenter$rotation Rubrary::plot_scatter(   df = Data2, # Uncentered data   xval = \"x\", yval = \"y\",   title = \"Uncentered data w/ PC1\",   guides = T, cormethod = \"none\" ) +   geom_vline(xintercept = 0, linetype = \"dotted\", alpha = 0.25) +   geom_hline(yintercept = 0, linetype = \"dotted\", alpha = 0.25) +   geom_abline(intercept = 0, linetype = \"dashed\",               slope = evs_NoCenter[2,1] / evs_NoCenter[1,1]) + # EV / PC 1   scale_x_continuous(limits = c(-1, 4), expand = c(0, 0)) +   scale_y_continuous(limits = c(-1, 4), expand = c(0, 0))"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"pca-with-centering","dir":"Articles","previous_headings":"Standardization > Centering","what":"PCA with centering","title":"Principal Component Analysis (PCA) Walkthrough","text":"centered data, first eigenvector (PC1) crosses origin along direction cloud points.","code":"PCA2_Center <- Rubrary::run_PCA(   df = t(Data2), # 1 point per column   center = T, scale = F, tol = 0, screeplot = F ) # Extract eigenvectors evs_Center <- PCA2_Center$rotation Rubrary::plot_scatter(   df = as.data.frame(scale(Data2, center = T)), # Centered data   xval = \"x\", yval = \"y\",   title = \"Centered data w/ PC1\",   guides = F, cormethod = \"none\" ) +   geom_vline(xintercept = 0, linetype = \"dotted\", alpha = 0.25) +   geom_hline(yintercept = 0, linetype = \"dotted\", alpha = 0.25) +   geom_abline(intercept = 0, linetype = \"dashed\",               slope = evs_Center[2,1] / evs_Center[1,1]) + # EV / PC1   scale_x_continuous(limits = c(-2, 2), expand = c(0, 0)) +   scale_y_continuous(limits = c(-2, 2), expand = c(0, 0))"},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"links-2","dir":"Articles","previous_headings":"Standardization > Centering","what":"Links","title":"Principal Component Analysis (PCA) Walkthrough","text":"Cross Validated: centering data get rid intercept regression PCA? Cross Validated: centering make difference PCA (SVD eigen decomposition)?","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"scaling","dir":"Articles","previous_headings":"Standardization","what":"Scaling","title":"Principal Component Analysis (PCA) Walkthrough","text":"Somewhat subjective depending ’re interested investigating. scaling: performing PCA covariance matrix Generally okay variable scales similar variables unit measure Scaling: performing PCA correlation matrix Generally preferred variable scales different variables different unit measure PCA correlation mtx PCA standardization variable","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"links-3","dir":"Articles","previous_headings":"Standardization > Scaling","what":"Links","title":"Principal Component Analysis (PCA) Walkthrough","text":"Cross Validated: PCA correlation covariance?","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"varimax","dir":"Articles","previous_headings":"","what":"Varimax","title":"Principal Component Analysis (PCA) Walkthrough","text":"ttnphns Stack Exchange!!","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/articles/PCA_Walkthrough.html","id":"links-4","dir":"Articles","previous_headings":"Varimax","what":"Links","title":"Principal Component Analysis (PCA) Walkthrough","text":"Cross Validated: compute varimax-rotated principal components R? REALLY GOOD ANSWERS explaining math + consequences rotation raw scores + eigenvectors vs. std scores + loadings amoeba answer ttnphns answer Cross Validated: obtain unstandardized scores factor analysis (FA)?","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yi Jou (Ruby) Liao. Author, maintainer.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liao Y (2023). Rubrary: Ruby's functions & notes. https://liaoyjruby.github.io/Rubrary/, https://github.com/liaoyjruby/Rubrary.","code":"@Manual{,   title = {Rubrary: Ruby's functions & notes},   author = {Yi Jou (Ruby) Liao},   year = {2023},   note = {https://liaoyjruby.github.io/Rubrary/, https://github.com/liaoyjruby/Rubrary}, }"},{"path":"https://liaoyjruby.github.io/Rubrary/index.html","id":"rubrary","dir":"","previous_headings":"","what":"Ruby's functions & notes","title":"Ruby's functions & notes","text":"Personal functions, mostly usage Graeber Lab OV project analysis workflows test R package building. functions subject sudden changes. Installing package install many packages used throughout Graeber lab analyses. Certain packages installed listed “Suggested” may prompted installation upon running relevant function.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Ruby's functions & notes","text":"can install development version Rubrary GitHub :","code":"if (!require(\"devtools\", quietly = TRUE))     install.packages(\"devtools\")  devtools::install_github(\"liaoyjruby/Rubrary\")"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/airway_deseq_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway Dex Treated vs. Untreated DESeq2 Results — airway_deseq_res","title":"Airway Dex Treated vs. Untreated DESeq2 Results — airway_deseq_res","text":"airway package data run DESeq2 analyze differential gene expression dexamethasone treated untreated airway smooth muscle cells. Original gene names converted Ensembl ID HGNC symbol filtered protein-coding BioMart database.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/airway_deseq_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway Dex Treated vs. Untreated DESeq2 Results — airway_deseq_res","text":"","code":"airway_deseq_res"},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/reference/airway_deseq_res.html","id":"airway-deseq-res","dir":"Reference","previous_headings":"","what":"airway_deseq_res","title":"Airway Dex Treated vs. Untreated DESeq2 Results — airway_deseq_res","text":"data frame 16,460 rows 9 columns: ensembl_gene_id, hgnc_symbol Gene names Ensembl ID HGNC symbol format baseMean Average normalized count values, dividing size factors, taken samples log2FoldChange, lfcSE Effect size estimate, log base 2 scale standard error stat Value test statistic pvalue, padj P-value adjusted P-value sign_log_p Log base 2 p-value multiplied sign","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/airway_deseq_res.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Airway Dex Treated vs. Untreated DESeq2 Results — airway_deseq_res","text":"https://bioconductor.org/packages/release/data/experiment/html/airway.html","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/assess_integration.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and plot integration assessment cell-specific methods for Seurat object — assess_integration","title":"Compute and plot integration assessment cell-specific methods for Seurat object — assess_integration","text":"Wrapper application single cell integration assessment metrics default parameters. Takes Seurat object, calculates integration assessment metric per cell given grouping variables, plots visualization metrics. single integration score per dataset can reported median metric across cells.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/assess_integration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and plot integration assessment cell-specific methods for Seurat object — assess_integration","text":"","code":"assess_integration(   sobj,   group.var,   method = c(\"LISI\", \"MixingMetric\", \"CellMixS\"),   reduction = c(\"umap\", \"pca\", \"tsne\"),   k = 300,   MM_flip = TRUE,   title = NULL,   savename = NULL,   width = NULL,   height = NULL )  run_LISI(   sobj,   group.var,   reduction = c(\"umap\", \"pca\", \"tsne\"),   title = NULL,   savename = NULL,   width = NULL,   height = NULL )  run_MixingMetric(   sobj,   group.var,   MM_flip = TRUE,   reduction = c(\"umap\", \"pca\", \"tsne\"),   k = 300,   title = NULL,   savename = NULL,   width = NULL,   height = NULL )  run_CellMixS(   sobj,   group.var,   reduction = c(\"umap\", \"pca\", \"tsne\"),   k = 300,   title = NULL,   savename = NULL,   width = NULL,   height = NULL )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/assess_integration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and plot integration assessment cell-specific methods for Seurat object — assess_integration","text":"sobj Seurat object group.var character (vector mm lisi); metadata colname check level integration method c(\"LISI\", \"MixingMetric\", \"CellMixS\"); integration assessment metric apply reduction c(\"umap\", \"pca\", \"tsne\"); dimensional reduction method k integer; max.k Seurat::MixingMetric, k CellMixS::cms MM_flip logical; use max.k - MixingMetric instead MixingMetric title string; plot title savename string; filepath save results figure (ext.) width numeric; plot width height numeric; plot height","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/assess_integration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and plot integration assessment cell-specific methods for Seurat object — assess_integration","text":"Dataframe integration assessment values","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/reference/assess_integration.html","id":"local-inverse-simpson-s-index-lisi-neighborhood-batch-diversity","dir":"Reference","previous_headings":"","what":"Local inverse Simpson's index lisi: neighborhood batch diversity","title":"Compute and plot integration assessment cell-specific methods for Seurat object — assess_integration","text":"Wrapper immunogenomics/LISI Harmony paper. Quantifies diversity batches within local neighborhoods, defined kNN graphs, using inverse Simpson's index. LISI = 1: neighborhood comprised single group, mixed LISI = # groups: neighborhood equal number cells datasets, perfect mixing","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/assess_integration.html","id":"seurat-mixingmetric-mm-local-group-knn-ranking","dir":"Reference","previous_headings":"","what":"Seurat MixingMetric mm: local / group kNN ranking","title":"Compute and plot integration assessment cell-specific methods for Seurat object — assess_integration","text":"Wrapper Seurat::MixingMetric Seurat v3 paper (Stuart et al. 2019). Assesses local neighborhood composition cell well mixed neighborhood . neighborhood well mixed, contain least cells dataset. Can intuitive high MixingMetric mean good mixing, range can flipped max.k - MixingMetric. Uses flipped scale (MM_flip = TRUE) default. MixingMetric = max.k, low max.k - MixingMetric: mixed Low MixingMetric, high max.k - MixingMetric: well mixed Set-wide metric: median (mean) MixingMetric distribution Implemented max.k = 300 default.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/assess_integration.html","id":"cellmixs-cms-batch-specific-distance-distribution-knn-test","dir":"Reference","previous_headings":"","what":"CellMixS cms: batch-specific distance distribution kNN test","title":"Compute and plot integration assessment cell-specific methods for Seurat object — assess_integration","text":"Wrapper CellMixS::cms (Lütge et al. 2021). Tests cell hypothesis batch-specific distance distributions towards k-nearest neighboring (knn) cells derived unspecified underlying distribution using Anderson-Darling test. Low cms: poorly mixed per cell neighborhood High cms: well mixed per cell neighborhood Set-wide metric: cms histogram, flat random batch mixing skewed towards 0 batch related bias Implementation uses k = 300 dim_red = reduction. per CellMixS vignette, k exceed size smallest cell population. Takes run, asks BiocParallel use BiocParallel::MulticoreParam(). Computer may churn runs...","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/assess_integration.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Compute and plot integration assessment cell-specific methods for Seurat object — assess_integration","text":"run_LISI(): Compute plot local inverse Simpson's index lisi run_MixingMetric(): Compute plot Seurat MixingMetric mm run_CellMixS(): Compute plot CellMixS cms","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/reference/calc_sumZscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Sum Z Score — calc_sumZscore","title":"Generate Sum Z Score — calc_sumZscore","text":"Slightly modified Favour's function OV project","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/calc_sumZscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Sum Z Score — calc_sumZscore","text":"","code":"calc_sumZscore(df, sig, topn = length(sig), botn = NA)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/calc_sumZscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Sum Z Score — calc_sumZscore","text":"df numeric dataframe (e.g gene expression df); rownames contain name genes/features signature sig vector/list genes (applicable, list ordered enriched genes top & de-enriched genes bottom) topn numeric; genes top signature consider botn numeric; genes bottom signature consider","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/calc_sumZscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Sum Z Score — calc_sumZscore","text":"scores samples using signature genes","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/cbind.fill.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine data.frames by column, filling in missing rows. — cbind.fill","title":"Combine data.frames by column, filling in missing rows. — cbind.fill","text":"cbinds list dataframes filling missing rows NA. Based https://stackoverflow.com//7962980","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/cbind.fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine data.frames by column, filling in missing rows. — cbind.fill","text":"","code":"# S3 method for fill cbind(...)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/cbind.fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine data.frames by column, filling in missing rows. — cbind.fill","text":"... input data frames column bind together","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/cbind.fill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine data.frames by column, filling in missing rows. — cbind.fill","text":"single data frame","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/check_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Shapiro-Wilk test of normality — check_normal","title":"Shapiro-Wilk test of normality — check_normal","text":"Uses stats::shapiro.test perform test normality outputs interpretation console.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/check_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shapiro-Wilk test of normality — check_normal","text":"","code":"check_normal(values, alpha = 0.05)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/check_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shapiro-Wilk test of normality — check_normal","text":"values numeric vector alpha numeric; p-value threshold significance","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/check_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shapiro-Wilk test of normality — check_normal","text":"Logical SW normality test result; message","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/check_normal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shapiro-Wilk test of normality — check_normal","text":"null hypothesis S-W test sample comes normally distributed population. p-value less chosen alpha level, null hypothesis rejected, indicating data non-normal distribution.","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/reference/check_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shapiro-Wilk test of normality — check_normal","text":"","code":"set.seed(13) check_normal(rnorm(100)) #> Shapiro-Wilk normality test: p-value = 0.273 #> ** p = 0.273 > 0.05; normal #> [1] TRUE"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/convert_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert list of genes via BioMart — convert_genes","title":"Convert list of genes via BioMart — convert_genes","text":"See biomaRT::listAttributes(mart) list options from_to.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/convert_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert list of genes via BioMart — convert_genes","text":"","code":"convert_genes(   genes,   from_to = c(\"ensembl_gene_id\", \"hgnc_symbol\"),   mart = NULL,   table = FALSE )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/convert_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert list of genes via BioMart — convert_genes","text":"genes char vector; genes from_to length 2 char vector; 1st value current format (ex. ensemb_gene_id), 2nd value desired format (ex. hgnc_symbol) mart biomaRt Mart object table logical; T return conversion table","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/convert_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert list of genes via BioMart — convert_genes","text":"char vector converted gene list desired format","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/corner.html","id":null,"dir":"Reference","previous_headings":"","what":"Like head but just the corner — corner","title":"Like head but just the corner — corner","text":"Like head just corner","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/corner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Like head but just the corner — corner","text":"","code":"corner(df, n = 10)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/corner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Like head but just the corner — corner","text":"df dataframe n integer; number rows = columns display","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/corner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Like head but just the corner — corner","text":"Top left n x n submatrix df","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/corner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Like head but just the corner — corner","text":"","code":"corner(diag(15)) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]    1    0    0    0    0    0    0    0    0     0 #>  [2,]    0    1    0    0    0    0    0    0    0     0 #>  [3,]    0    0    1    0    0    0    0    0    0     0 #>  [4,]    0    0    0    1    0    0    0    0    0     0 #>  [5,]    0    0    0    0    1    0    0    0    0     0 #>  [6,]    0    0    0    0    0    1    0    0    0     0 #>  [7,]    0    0    0    0    0    0    1    0    0     0 #>  [8,]    0    0    0    0    0    0    0    1    0     0 #>  [9,]    0    0    0    0    0    0    0    0    1     0 #> [10,]    0    0    0    0    0    0    0    0    0     1"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/df_to_mtx.html","id":null,"dir":"Reference","previous_headings":"","what":"df_to_mtx — df_to_mtx","title":"df_to_mtx — df_to_mtx","text":"df_to_mtx","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/df_to_mtx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"df_to_mtx — df_to_mtx","text":"","code":"df_to_mtx(df, filter = T)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/df_to_mtx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"df_to_mtx — df_to_mtx","text":"df dataframe filter logical; T filter genes 9+ zeros","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/df_to_mtx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"df_to_mtx — df_to_mtx","text":"Dataframe restructured matrix","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/filter_DESeq_PC.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter DESeq signature to protein coding only — filter_DESeq_PC","title":"Filter DESeq signature to protein coding only — filter_DESeq_PC","text":"Filter DESeq signature protein coding ","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/filter_DESeq_PC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter DESeq signature to protein coding only — filter_DESeq_PC","text":"","code":"filter_DESeq_PC(   sig_txt,   coding_file =     \"/Users/liaoyj/Dropbox/Ovarian Project/log2_coding_expression_datasets/protein-coding_gene.txt\" )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/filter_DESeq_PC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter DESeq signature to protein coding only — filter_DESeq_PC","text":"sig_txt Path DESeq text file output coding_file Path protein-coding gene table w/ \"symbol\" column","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/filter_DESeq_PC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter DESeq signature to protein coding only — filter_DESeq_PC","text":"DESeq text rnk files subsetted PC coding gene","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/filter_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter dataframe by list of (protein coding) genes — filter_genes","title":"Filter dataframe by list of (protein coding) genes — filter_genes","text":"Filter df (genes rownames) list genes given.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/filter_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter dataframe by list of (protein coding) genes — filter_genes","text":"","code":"filter_genes(   df,   genes_filt = Rubrary::get_PC_genes(),   gene_col = NULL,   search = FALSE )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/filter_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter dataframe by list of (protein coding) genes — filter_genes","text":"df dataframe; rownames must gene symbols genes_filt char vector; (protein coding) genes filter gene_col string; colnames genes, assumed rownames(df) NULL search logical; T use Seurat::UpdateSymbolList match gene symbols better","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/filter_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter dataframe by list of (protein coding) genes — filter_genes","text":"dataframe gene rownames filtered protein coding ","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/format_GSEA_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Format GSEA pathway name — format_GSEA_name","title":"Format GSEA pathway name — format_GSEA_name","text":"Strips prepended database abbreviation, changes underscores spaces, converts title case.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/format_GSEA_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format GSEA pathway name — format_GSEA_name","text":"","code":"format_GSEA_name(   pw,   ignore = NULL,   source = FALSE,   split = FALSE,   split_nchar = 40 )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/format_GSEA_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format GSEA pathway name — format_GSEA_name","text":"pw string char vector; MSigDB pathway names ignore char vector; terms leave uppercase (ex. DNA, RNA) instead title case source logical; T append source parens end name split logical; T (roughly) split long names multiple lines split_nchar integer; split = TRUE, max number characters per line","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/format_GSEA_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format GSEA pathway name — format_GSEA_name","text":"Nicer looking title-case'd pathway name","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/format_GSEA_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format GSEA pathway name — format_GSEA_name","text":"","code":"format_GSEA_name(\"DATABASE_DNA_REPAIR\") #> [1] \"DNA Repair\" format_GSEA_name(\"DATABASE_DNA_REPAIR_THIS_IS_A_REALLY_LONG_PATHWAY\", split = TRUE) #> [[1]] #> [1] \"DNA Repair this is a Really Long Pathway\" #>"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/full_join_rownames.html","id":null,"dir":"Reference","previous_headings":"","what":"Full join by rownames — full_join_rownames","title":"Full join by rownames — full_join_rownames","text":"Wrapper dplyr::full_join merge rownames.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/full_join_rownames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full join by rownames — full_join_rownames","text":"","code":"full_join_rownames(df1, df2)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/full_join_rownames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full join by rownames — full_join_rownames","text":"df1 Numerical dataframe rownames df2 Numerical dataframe rownames","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/full_join_rownames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full join by rownames — full_join_rownames","text":"Full-joined dataframe rownames rownames","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/reference/genecoexp_scatter_hyper.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot pairwise gene coexpression scatter and calculate hypergeometric enrichment p-value between two genelists — genecoexp_scatter_hyper","title":"Plot pairwise gene coexpression scatter and calculate hypergeometric enrichment p-value between two genelists — genecoexp_scatter_hyper","text":"Plot pairwise gene coexpression scatter calculate hypergeometric enrichment p-value two genelists","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/genecoexp_scatter_hyper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot pairwise gene coexpression scatter and calculate hypergeometric enrichment p-value between two genelists — genecoexp_scatter_hyper","text":"","code":"genecoexp_scatter_hyper(   seuobj,   df_dense = NULL,   genesA,   genesB,   group = NULL,   savepath,   ncols = NULL )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/genecoexp_scatter_hyper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot pairwise gene coexpression scatter and calculate hypergeometric enrichment p-value between two genelists — genecoexp_scatter_hyper","text":"seuobj Seurat object df_dense dataframe; dense gene expression matrix Seurat (cells rows, genes columns) genesA char vector; list genes genesB char vector; list genes group string; metadata value group savepath string; path choose title sans extension ncols integer; number columns grid","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/genecoexp_scatter_hyper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot pairwise gene coexpression scatter and calculate hypergeometric enrichment p-value between two genelists — genecoexp_scatter_hyper","text":"dataframe hypergeometric test p-values","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_PC_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve protein coding genes from Ensembl BioMart — get_PC_genes","title":"Retrieve protein coding genes from Ensembl BioMart — get_PC_genes","text":"Retrieve protein coding genes Ensembl BioMart","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_PC_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve protein coding genes from Ensembl BioMart — get_PC_genes","text":"","code":"get_PC_genes(mart = NULL)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_PC_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve protein coding genes from Ensembl BioMart — get_PC_genes","text":"mart biomaRt Mart object","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_PC_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve protein coding genes from Ensembl BioMart — get_PC_genes","text":"character vector protein coding genes","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_PC_genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve protein coding genes from Ensembl BioMart — get_PC_genes","text":"","code":"# \\donttest{   head(Rubrary::get_PC_genes()) #> [1] \"MT-ND1\"  \"MT-ND2\"  \"MT-CO1\"  \"MT-CO2\"  \"MT-ATP8\" \"MT-ATP6\" # }"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_gene_desc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get gene description from BioMart — get_gene_desc","title":"Get gene description from BioMart — get_gene_desc","text":"Get gene description BioMart","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_gene_desc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get gene description from BioMart — get_gene_desc","text":"","code":"get_gene_desc(   genes,   attrs = c(\"hgnc_symbol\", \"description\"),   clean_desc = TRUE,   mart = NULL,   verbose = FALSE )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_gene_desc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get gene description from BioMart — get_gene_desc","text":"genes character vector; genes interest attrs character vector; valid attributes biomaRt::listAttributes(mart) clean_desc logical; T remove \"[Source: ...]\" description field mart Mart object; generate one provided verbose logical; output biomaRt messages console","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_gene_desc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get gene description from BioMart — get_gene_desc","text":"dataframe attrs columns, populated BioMart","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_gene_desc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get gene description from BioMart — get_gene_desc","text":"","code":"genes <- c(\"POU5F1\", \"SOX2\", \"KLF4\", \"MYC\") # \\donttest{   head(Rubrary::get_gene_desc(genes)) #>   hgnc_symbol                                    description #> 1        KLF4                    KLF transcription factor 4  #> 2         MYC MYC proto-oncogene, bHLH transcription factor  #> 3      POU5F1                        POU class 5 homeobox 1  #> 4        SOX2                SRY-box transcription factor 2  # }"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_kspval.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Kolgomorov-Smirnov enrichment p-value — get_kspval","title":"Calculate Kolgomorov-Smirnov enrichment p-value — get_kspval","text":"group interest specified, pulls first condition others.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_kspval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Kolgomorov-Smirnov enrichment p-value — get_kspval","text":"","code":"get_kspval(df, value, group, group2 = NULL)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_kspval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Kolgomorov-Smirnov enrichment p-value — get_kspval","text":"df dataframe value string; colname values rank group string; colname categorizations group2 string; group interest","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_kspval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Kolgomorov-Smirnov enrichment p-value — get_kspval","text":"Kolgomorov-Smirnov enrichment p-value","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_kspval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Kolgomorov-Smirnov enrichment p-value — get_kspval","text":"","code":"set.seed(13) df = data.frame(   group = c(rep(\"A\", 50), rep(\"B\",50)),   values = c(rnorm(50, mean = 0), rnorm(50, mean = 2))) get_kspval(df, value = \"values\", group = \"group\", group2 = \"A\") #> [1] 8.759313e-13"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_loadings.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract loadings from prcomp object — get_loadings","title":"Extract loadings from prcomp object — get_loadings","text":"Scales PCA decomposition eigenvectors (rotation output prcomp) square root corresponding eigenvalues (sdev output prcomp).","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_loadings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract loadings from prcomp object — get_loadings","text":"","code":"get_loadings(obj_prcomp)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_loadings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract loadings from prcomp object — get_loadings","text":"obj_prcomp prcomp object","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_loadings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract loadings from prcomp object — get_loadings","text":"Matrix PCA loadings","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_loadings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract loadings from prcomp object — get_loadings","text":"","code":"data(iris) PCA_iris <- Rubrary::run_PCA(t(iris[,c(1:4)])) #> ** Cumulative var. exp. >= 80% at PC 2 (95.8%)  Rubrary::get_loadings(PCA_iris) #>                     PC1         PC2         PC3         PC4 #> Sepal.Length  0.8901688 -0.36082989  0.27565767  0.03760602 #> Sepal.Width  -0.4601427 -0.88271627 -0.09361987 -0.01777631 #> Petal.Length  0.9915552 -0.02341519 -0.05444699 -0.11534978 #> Petal.Width   0.9649790 -0.06399985 -0.24298265  0.07535950"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_log2_coding_geneexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get log2p1 protein coding gene expression matrix — get_log2_coding_geneexp","title":"Get log2p1 protein coding gene expression matrix — get_log2_coding_geneexp","text":"Get log2p1 protein coding gene expression matrix","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_log2_coding_geneexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get log2p1 protein coding gene expression matrix — get_log2_coding_geneexp","text":"","code":"get_log2_coding_geneexp(exp_file, coding_file, output_filename)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_log2_coding_geneexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get log2p1 protein coding gene expression matrix — get_log2_coding_geneexp","text":"exp_file Gene exp data; samples columns, genes rows coding_file Protein coding genes mtx; \"symbol\" column output_filename Filename save output ","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_log2_coding_geneexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get log2p1 protein coding gene expression matrix — get_log2_coding_geneexp","text":"txt (tsv) log2p1 transformed protein coding gene expression","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of TF MRA signature genes to highlight — get_n","title":"Get number of TF MRA signature genes to highlight — get_n","text":"Get number TF MRA signature genes highlight","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of TF MRA signature genes to highlight — get_n","text":"","code":"get_n(signature, pos = T, sig = F)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of TF MRA signature genes to highlight — get_n","text":"signature df; \"pvalue\" \"NES\" columns pos logical; \"T\" positive NES sig logical; \"T\" p < 0.05","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/get_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get number of TF MRA signature genes to highlight — get_n","text":"integer n number genes highlight","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/inst_pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"Prompt user to install package — inst_pkg","title":"Prompt user to install package — inst_pkg","text":"Helper function \"Rubrary::use_pkg\"","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/inst_pkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prompt user to install package — inst_pkg","text":"","code":"inst_pkg(pkg, strict = FALSE)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/inst_pkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prompt user to install package — inst_pkg","text":"pkg string; package name (CRAN Bioconductor) strict logical; strict requirement package install?","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/inst_pkg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prompt user to install package — inst_pkg","text":"None","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/left_join_rownames.html","id":null,"dir":"Reference","previous_headings":"","what":"Left join by rownames — left_join_rownames","title":"Left join by rownames — left_join_rownames","text":"Wrapper dplyr::left_join merge rownames. dataframes matching rownames","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/left_join_rownames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Left join by rownames — left_join_rownames","text":"","code":"left_join_rownames(df1, df2)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/left_join_rownames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Left join by rownames — left_join_rownames","text":"df1 Numerical dataframe rownames df2 Numerical dataframe rownames","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/left_join_rownames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Left join by rownames — left_join_rownames","text":"Left-joined dataframe rownames rownames","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/make_pconly.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter signature to PC coding only by matching with genes in log2UQcounts — make_pconly","title":"Filter signature to PC coding only by matching with genes in log2UQcounts — make_pconly","text":"Filter signature PC coding matching genes log2UQcounts","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/make_pconly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter signature to PC coding only by matching with genes in log2UQcounts — make_pconly","text":"","code":"make_pconly(sig_path)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/make_pconly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter signature to PC coding only by matching with genes in log2UQcounts — make_pconly","text":"sig_path string; path DESeq signature","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/make_pconly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter signature to PC coding only by matching with genes in log2UQcounts — make_pconly","text":"DESeq signature subsetted PC genes","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/output_DESeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Output DESeq results as dataframe with signed log2 p metric — output_DESeq","title":"Output DESeq results as dataframe with signed log2 p metric — output_DESeq","text":"Filters sign_log_p == NA rows.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/output_DESeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output DESeq results as dataframe with signed log2 p metric — output_DESeq","text":"","code":"output_DESeq(DE_results, savename = NULL, rank = FALSE)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/output_DESeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output DESeq results as dataframe with signed log2 p metric — output_DESeq","text":"DE_results DESeq results object savename string; filepath save table (ext.) rank logical; T output .rnk file compatible Java GSEA app","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/output_DESeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output DESeq results as dataframe with signed log2 p metric — output_DESeq","text":"Dataframe DESeq results","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/phyper_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Hypergeometric test, 0 vs. non-0, on columns of a dataframe — phyper_df","title":"Hypergeometric test, 0 vs. non-0, on columns of a dataframe — phyper_df","text":"Originally used scRNA gene co-expression analysis","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/phyper_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hypergeometric test, 0 vs. non-0, on columns of a dataframe — phyper_df","text":"","code":"phyper_df(df, A, B)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/phyper_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hypergeometric test, 0 vs. non-0, on columns of a dataframe — phyper_df","text":"df dataframe; includes columns \"\" \"B\" string; colname values B string; colname values B","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/phyper_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hypergeometric test, 0 vs. non-0, on columns of a dataframe — phyper_df","text":"single dataframe row &B names, phyper inputs, pvalues","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_DESeq_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_DESeq_boxplot — plot_DESeq_boxplot","title":"plot_DESeq_boxplot — plot_DESeq_boxplot","text":"plot_DESeq_boxplot","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_DESeq_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_DESeq_boxplot — plot_DESeq_boxplot","text":"","code":"plot_DESeq_boxplot(   sig,   data,   anno,   merged = T,   batch = \"UCLA\",   colors = c(\"goldenrod2\", \"navyblue\"),   savename = NULL,   width = 13,   height = 9 )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_DESeq_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_DESeq_boxplot — plot_DESeq_boxplot","text":"sig dataframe; sorted signature genes first column data dataframe; gene expression data w/ \"gene\" column anno dataframe; sample annotation file w/ \"Batch\" & \"Type\" cols merged logica; T dataframe made combined datasets batch string; merged, colors vector; list colors, n = number batches savename string; filepath save figures (ext.) width numeric; width plot saved height numeric; height plot saved","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_DESeq_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_DESeq_boxplot — plot_DESeq_boxplot","text":"Boxplots gene expression top/bot 5 genes sig","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_DESeq_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_DESeq_scatter — plot_DESeq_scatter","title":"plot_DESeq_scatter — plot_DESeq_scatter","text":"plot_DESeq_scatter","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_DESeq_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_DESeq_scatter — plot_DESeq_scatter","text":"","code":"plot_DESeq_scatter(   sig1path,   sig2path,   batch = \"\",   xlab = \"Old DESeq signed log p\",   ylab = \"Updated DESeq signed log p\",   title = \"\",   desc = \"\",   rank = F )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_DESeq_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_DESeq_scatter — plot_DESeq_scatter","text":"sig1path Path 1st signature (x-axis) sig2path Path 2nd signature (y-axis) batch Descriptive word/phrase appended output path xlab x-axis label ylab y-axis label title Plot title desc Plot subtitle rank Plot rank scatter instead slogp/raw values","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_DESeq_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_DESeq_scatter — plot_DESeq_scatter","text":"Plot comparing 1 sig another","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEA_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot GSEA NES barplot — plot_GSEA_barplot","title":"Plot GSEA NES barplot — plot_GSEA_barplot","text":"Can plot barplot NES pathways one GSEA result, compare NES chosen pathways two GSEA results.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEA_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot GSEA NES barplot — plot_GSEA_barplot","text":"","code":"plot_GSEA_barplot(   gsea_res,   gsea_name = \"GSEA\",   gsea_pws = NULL,   n_pws = 5,   pw_format = FALSE,   pw_split = FALSE,   pw_source = TRUE,   pw_ignore = NULL,   pw_size = 5,   gsea2_res = NULL,   gsea2_name = NULL,   order2 = FALSE,   ptrn2 = \"stripe\",   NES_cutoff = NULL,   colors = c(\"firebrick\", \"darkblue\"),   title = NULL,   savename = NULL,   width = 10,   height = NULL )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEA_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot GSEA NES barplot — plot_GSEA_barplot","text":"gsea_res dataframe; GSEA results w/ pathway NES columns gsea_name string; description GSEA results gsea_pws char vector; pathways GSEA results plot n_pws integer; pathways provided, top/bottom n pathways plot pw_format logical; clean pathway names? pw_split logical; T split pathway names multiple lines pw_source logical; T append pathway source parenthesis pw_ignore char vector; list terms ignore name formatting pw_size numeric; pathway name text size gsea2_res dataframe; 2nd GSEA results w/ pathway NES columns gsea2_name string; description 2nd GSEA results order2 logical; order pathways NES 2nd GSEA results? ptrn2 string; ggpattern pattern arg: 'stripe', 'crosshatch', 'point', 'circle', 'none' NES_cutoff numeric; value draw NES cutoff line colors vector; colors[1] positive bar color, colors[2] negative bar color title string; plot title savename string; file path save plot width numeric; plot width height numeric; plot height","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEA_barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot GSEA NES barplot — plot_GSEA_barplot","text":"GSEA NES barplot ggplot object","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEA_pathway.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot GSEA pathway plots (waterfall + enrichment) — plot_GSEA_pathway","title":"Plot GSEA pathway plots (waterfall + enrichment) — plot_GSEA_pathway","text":"subtitle specified, Kolmogorov-Smirnov enrichment p-value calculated check genes pathway separate genes chosen pathway based ranking desired rankcol.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEA_pathway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot GSEA pathway plots (waterfall + enrichment) — plot_GSEA_pathway","text":"","code":"plot_GSEA_pathway(   sig,   geneset,   genecol = \"gene\",   rankcol,   rankcol_name = rankcol,   hightolow = FALSE,   label = length(geneset) < 20,   legendpos = \"none\",   lab_high = NULL,   lab_low = NULL,   hllab = \"Highlight\",   title = NULL,   subtitle = NULL,   savename = NULL )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEA_pathway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot GSEA pathway plots (waterfall + enrichment) — plot_GSEA_pathway","text":"sig dataframe; genecol + rankcol columns geneset vector; list genes genecol string; colname gene names sig rankcol string; colname values sig rankcol_name string; descriptive name values hightolow logical; T high values left, low right label logical; T label highlighted genes legendpos vector; value btwn 0-1 legend coordinates (ggplot2 legend.position) lab_high string; description high values lab_low string; description low values hllab string; description highlighted values title string; plot title subtitle string; plot subtitle; !! overwrites p-val_enrichment savename string; filepath save png ","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEA_pathway.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot GSEA pathway plots (waterfall + enrichment) — plot_GSEA_pathway","text":"grid gene set enrichment waterfall enrichment plot","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEA_pathway_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_GSEA_pathway that works nicely with lapply — plot_GSEA_pathway_batch","title":"plot_GSEA_pathway that works nicely with lapply — plot_GSEA_pathway_batch","text":"plot_GSEA_pathway works nicely lapply","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEA_pathway_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_GSEA_pathway that works nicely with lapply — plot_GSEA_pathway_batch","text":"","code":"plot_GSEA_pathway_batch(   path_name,   pthwys,   sig,   genecol = \"gene\",   rankcol,   rankcol_name = rankcol,   hllab = \"Pathway genes\",   hightolow = FALSE,   format_name = TRUE,   ignore_name = NULL,   lab_low = NULL,   lab_high = NULL,   legendpos = c(0.5, 0.2),   label = length(pthwys[[path_name]]) < 50,   sig_name = \"\",   savedir = NULL )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEA_pathway_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_GSEA_pathway that works nicely with lapply — plot_GSEA_pathway_batch","text":"path_name string; name pathway pthwys named list; key = geneset name, values = char vector genes geneset sig dataframe; signature genecol string; colname gene names sig rankcol string; colname values rank rankcol_name string; descriptor rankcol hllab string; descriptor highlighted genes hightolow logical; T high values left, low right format_name logical; T run pathway name Rubrary::format_GSEA_name ignore_name char vector; phrases exclude title case Rubrary::format_GSEA_name lab_low string; label low rankcol values lab_high string; label high rankcol values legendpos vector; value btwn 0-1 legend coordinates (ggplot2 legend.position) label logical; T label points plot sig_name string; name signature savedir string; directory path saving plot","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEA_pathway_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_GSEA_pathway that works nicely with lapply — plot_GSEA_pathway_batch","text":"Gene set enrichment plot ggplot object","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEAsq_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot categorical percentile rank comparison between two GSEA squared signatures — plot_GSEAsq_density","title":"Plot categorical percentile rank comparison between two GSEA squared signatures — plot_GSEAsq_density","text":"Plot categorical percentile rank comparison two GSEA squared signatures","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEAsq_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot categorical percentile rank comparison between two GSEA squared signatures — plot_GSEAsq_density","text":"","code":"plot_GSEAsq_density(   GSEAsq_df1,   GSEAsq_df2,   name1,   name2,   title = \"GSEA Squared\",   colors = c(\"firebrick\", \"lightslateblue\"),   rug = TRUE,   savename = NULL,   height = 10,   width = 10 )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEAsq_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot categorical percentile rank comparison between two GSEA squared signatures — plot_GSEAsq_density","text":"GSEAsq_df1 df/string; \"gsea_squared-df.txt\" df path GSEAsq result 1 GSEAsq_df2 df/string; \"gsea_squared-df.txt\" df path GSEAsq result 2 name1 string; descriptor GSEAsq result 1 name2 string; descriptor GSEAsq result 2 title string; overall plot title colors vector; first color signify result 1, second result 2 rug logical; TRUE rugplot density plot savename string; filepath save plot height numeric; plot height width numeric; plot width","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_GSEAsq_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot categorical percentile rank comparison between two GSEA squared signatures — plot_GSEAsq_density","text":"facet wrapped ggplot object","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_PCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCA with annotation — plot_PCA","title":"Plot PCA with annotation — plot_PCA","text":"Plot PCA annotation","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_PCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCA with annotation — plot_PCA","text":"","code":"plot_PCA(   df_pca,   anno = NULL,   PCx = \"PC1\",   PCy = \"PC2\",   type = c(\"Scores\", \"Loadings\"),   annoname = \"Sample\",   annolabel = annoname,   label = FALSE,   annotype = \"Batch\",   annotype2 = NULL,   ellipse = FALSE,   ks_pval = c(\"none\", \"caption\", \"grob\"),   highlight = NULL,   colors = NULL,   title = NULL,   subtitle = NULL,   density = FALSE,   savename = NULL,   width = 8,   height = 8 )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_PCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCA with annotation — plot_PCA","text":"df_pca string prcomp obj; (path ) PCA output anno string df; Annotation info DF PCx string; Component x-axis PCy string; Component y-axis type c(\"Score\", \"Loading\") annoname string; Colname anno matching point name annolabel string; Colname anno label points , defaults annoname label logical; T label points annotype string; Colname anno info color annotype2 string; Colname anno info change shape ellipse logical; Draw ggplot2::stat_ellipse data ellipse w/ default params - confidence ellipse ks_pval c(\"none\", \"caption\", \"grob\"); Display ks-pvalue caption grob highlight char vector; Specific points shape differently & label colors char vector; Length number unique annotypes title string; Plot title subtitle string; Subtitle plot density logical; Show density plot along axes; requires group annotations provided savename string; File path save plot width numeric; Saved plot width height numeric; Saved plot height","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_PCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCA with annotation — plot_PCA","text":"PCA output plotted annotation","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_PCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot PCA with annotation — plot_PCA","text":"","code":"data(iris) iris$Sample = rownames(iris) PCA_iris <- Rubrary::run_PCA(t(iris[,c(1:4)])) #> ** Cumulative var. exp. >= 80% at PC 2 (95.8%)  # Scores Rubrary::plot_PCA(   df_pca = PCA_iris,   anno = iris[,c(\"Sample\", \"Species\")],   annoname = \"Sample\", annotype = \"Species\",   title = \"Iris PCA Scores by Species\",   subtitle = \"Centered & scaled\",   ellipse = TRUE )  # Loadings Rubrary::plot_PCA(   df_pca = PCA_iris,   type = \"Loadings\",   title = \"Iris PCA Loadings\",   subtitle = \"Centered & scaled\",   label = TRUE )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_PCA_biplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCA biplot — plot_PCA_biplot","title":"Plot PCA biplot — plot_PCA_biplot","text":"PCA SVD \\(X = USV^T\\), uses standardized principal components data points (\\(\\bf{U}\\sqrt{n - 1}\\)) loadings (\\(\\bf{VS}/\\sqrt{n-1}\\)) plots onto scale - \"proper\" PCA biplot according Stack Exchange thread citing Gabriel 1971 paper PCA biplots.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_PCA_biplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCA biplot — plot_PCA_biplot","text":"","code":"plot_PCA_biplot(   obj,   PCx = \"PC1\",   PCy = \"PC2\",   anno = NULL,   annoname = \"Sample\",   annotype = \"Batch\",   label = c(\"Both\", \"Loadings\", \"Scores\", \"None\"),   colors = NULL,   col_load = \"firebrick\",   title = NULL,   ellipse = FALSE,   savename = NULL,   height = 8,   width = 8 )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_PCA_biplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCA biplot — plot_PCA_biplot","text":"obj prcomp object PCx string; Component x-axis PCy string; Component y-axis anno df; Annotation info observations annoname string; Colname anno matching data points annotype string; Colname anno desired coloring label c(\"\", \"Loadings\", \"Scores\", \"None\"); points label colors char vector; Length number unique annotypes col_load string; Color loading arrow segments title string; Plot title ellipse logical; Draw ggplot2::stat_ellipse data ellipse w/ default params - confidence ellipse savename string; File path save plot height numeric; Saved plot height width numeric; Saved plot width","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_PCA_biplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCA biplot — plot_PCA_biplot","text":"Biplot ggplot object","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_PCA_biplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot PCA biplot — plot_PCA_biplot","text":"","code":"data(iris) iris$Sample = rownames(iris) PCA_iris <- Rubrary::run_PCA(t(iris[,c(1:4)]),   center = TRUE, scale = FALSE, screeplot = FALSE) Rubrary::plot_PCA_biplot(   obj = PCA_iris,   anno = iris[,c(\"Sample\", \"Species\")],   annoname = \"Sample\", annotype = \"Species\",   label = \"Loadings\", ellipse = TRUE, title = \"Iris PCA Biplot\")"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_SCN_KaplanMeier.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot SCN Kaplan Meier Survival Analysis — plot_SCN_KaplanMeier","title":"Plot SCN Kaplan Meier Survival Analysis — plot_SCN_KaplanMeier","text":"GENERALIZED","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_SCN_KaplanMeier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot SCN Kaplan Meier Survival Analysis — plot_SCN_KaplanMeier","text":"","code":"plot_SCN_KaplanMeier(   df,   xlab = \"Time\",   title = \"Survival Analysis\",   SCN = NULL,   savename = NULL )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_SCN_KaplanMeier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot SCN Kaplan Meier Survival Analysis — plot_SCN_KaplanMeier","text":"df dataframe; cols \"OS\" (overall survival censor), \"OS.time\" (overall survival time) xlab string; x-axis label title plot title SCN SCN threshold designate SCN-like status already DF savename string; filename save ","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_SCN_KaplanMeier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot SCN Kaplan Meier Survival Analysis — plot_SCN_KaplanMeier","text":"Kaplan-Meier overall survival analysis plot comparing SCN-like status","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_boxplot_paired.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_boxplot_paired — plot_boxplot_paired","title":"plot_boxplot_paired — plot_boxplot_paired","text":"plot_boxplot_paired","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_boxplot_paired.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_boxplot_paired — plot_boxplot_paired","text":"","code":"plot_boxplot_paired(sig, sig_paired_df, batch)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_boxplot_paired.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_boxplot_paired — plot_boxplot_paired","text":"sig Column name specific signature sig_paired_df Dataframe signatures batch Plot subtitle","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_boxplot_paired.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_boxplot_paired — plot_boxplot_paired","text":"Paired boxplot separated type","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_comp_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot stacked barplot filled by group — plot_comp_barplot","title":"Plot stacked barplot filled by group — plot_comp_barplot","text":"Plot stacked barplot filled group","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_comp_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot stacked barplot filled by group — plot_comp_barplot","text":"","code":"plot_comp_barplot(   sobj,   breaks,   group,   stack = TRUE,   counts = TRUE,   title = ggplot2::waiver(),   xlabel = breaks,   colors = NULL,   ncol_legend = NULL,   savename = NULL,   width = 7,   height = 7 )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_comp_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot stacked barplot filled by group — plot_comp_barplot","text":"sobj Seurat object breaks string; metadata colname sobj set breaks / columns group string; metadata colname sobj split columns stack logical; split stacked plots counts + fraction counts logical; T include counts barplot stacked barplot title string; plot title xlabel string; x-axis (breaks) label colors char vector; list colors (n = # unique groups), \"alpha\" ncol_legend integer; # legend columns savename string; filepath save plot width numeric; saved plot width height numeric; saved plot height","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_comp_barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot stacked barplot filled by group — plot_comp_barplot","text":"Stacked barplot, filled group composition","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Density plot by group — plot_density","title":"Density plot by group — plot_density","text":"Density plot group","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density plot by group — plot_density","text":"","code":"plot_density(   df,   value,   group,   group2 = NA,   title = NA,   pval = T,   xlab = value,   colors = c(\"firebrick3\", \"gray\"),   rug = F,   rug_label = F,   rug_lab_nudge = 1e-05,   savename = NA,   width = 6,   height = 4 )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density plot by group — plot_density","text":"df dataframe value string; colname values group string; colname group info group2 string; group interest title string; plot title pval logical; get KSpval first group vs others xlab string; x-axis label colors vector; # colors = # groups rug logical; put rug plot x axis rug_label logical; label rug ticks first df column rug_lab_nudge numeric; fine-tune distance label x-axis savename string; filepath save PNG width numeric; ggsave width plot height numeric; ggsave height plot","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density plot by group — plot_density","text":"Density plot group","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density plot by group — plot_density","text":"","code":"set.seed(13) df = data.frame(   group = c(rep(\"A\", 50), rep(\"B\",50)),   values = c(rnorm(50, mean = 0), rnorm(50, mean = 2))) plot_density(df, value = \"values\", group = \"group\")"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_dimplot_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Seurat DimPlot grid set — plot_dimplot_grid","title":"Plot Seurat DimPlot grid set — plot_dimplot_grid","text":"Plot Seurat DimPlot grid set","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_dimplot_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Seurat DimPlot grid set — plot_dimplot_grid","text":"","code":"plot_dimplot_grid(   sobj,   reduction = c(\"umap\", \"pca\", \"tsne\"),   set,   ncol = 3,   guides = NULL,   redtitle = FALSE,   gridtitle = NULL,   gridsubtitle = NULL,   cols_num = c(\"blue\", \"red\"),   savename = NULL,   width = NULL,   height = NULL )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_dimplot_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Seurat DimPlot grid set — plot_dimplot_grid","text":"sobj Seurat object reduction c(\"pca\", \"tsne\", \"umap); must already present sobj set dataframe vector; col1 metadata name, col2 (opt) subplot description, col3 (opt) logical T/F label ncol number columns grid guides string; specify guides treated layout (?patchwork::wrap_plots) redtitle logical; TRUE prepend reduction method subplot title gridtitle string; title overall dimplot grid gridsubtitle string; subtitle overall dimplot grid cols_num char vector; two colors low numeric legend range high numeric legend range savename string; filepath save figure width integer; plot width, unspecified try calculate height integer; plot height, unspecified try calculate","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_dimplot_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Seurat DimPlot grid set — plot_dimplot_grid","text":"Patchwork grid Seurat DimPlots","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot distribution of numeric vector — plot_distribution","title":"Plot distribution of numeric vector — plot_distribution","text":"Ignores NA values mean & median calculation.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot distribution of numeric vector — plot_distribution","text":"","code":"plot_distribution(   values,   check_normal = FALSE,   hist = FALSE,   title = \"Distribution\",   xlab = \"Value\",   savename = NULL,   height = 5,   width = 7 )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot distribution of numeric vector — plot_distribution","text":"values numeric vector; values check distribution check_normal logical; perform SW test normality? hist logical; include histogram? title string; plot title xlab string; x-axis label savename string; filepath save figure height numeric; plot height width numeric; plot width","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot distribution of numeric vector — plot_distribution","text":"Plot distribution median + mean indicated","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot distribution of numeric vector — plot_distribution","text":"","code":"set.seed(13) vals_normal <- rnorm(100) plot_distribution(values = vals_normal, title = \"Normal\", hist = TRUE, check_normal = TRUE) #> Shapiro-Wilk normality test: p-value = 0.273 #> ** p = 0.273 > 0.05; normal #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   vals_sequential <- c(1:100) plot_distribution(values = vals_sequential, title = \"Sequential\", check_normal = TRUE) #> Shapiro-Wilk normality test: p-value = 0.00172 #> ** p = 0.00172 <= 0.05; non-normal"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_featurescatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot FeatureScatter wrapper — plot_featurescatter","title":"Plot FeatureScatter wrapper — plot_featurescatter","text":"Wrapper Seurat::FeatureScatter extras like saving options, plot title, correlation plot subtitle","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_featurescatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot FeatureScatter wrapper — plot_featurescatter","text":"","code":"plot_featurescatter(   sobj,   feat1,   feat2,   group = \"sample_id\",   title = NULL,   savename = NULL,   corr_method = c(\"pearson\", \"kendall\", \"spearman\"),   height = 7,   width = 9 )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_featurescatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot FeatureScatter wrapper — plot_featurescatter","text":"sobj Seurat object feat1 string; 1st feature plot (x-axis) feat2 string; 2nd feature plot (y-axis) group string; metadata colname group title string; plot title savename string; filepath save plot corr_method string; stats::cor method correlation calculation height numeric; plot height width numeric; plot width","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_featurescatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot FeatureScatter wrapper — plot_featurescatter","text":"FeatureScatter ggplot output","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot simple scatter — plot_scatter","title":"Plot simple scatter — plot_scatter","text":"Correlation value method gets placed plot caption / bottom-right.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot simple scatter — plot_scatter","text":"","code":"plot_scatter(   df = NULL,   xval,   yval,   label = NULL,   group = NULL,   rank = FALSE,   xlabel = ifelse(methods::is(xval, \"character\"), xval, \"X\"),   ylabel = ifelse(methods::is(yval, \"character\"), yval, \"Y\"),   cormethod = c(\"pearson\", \"spearman\", \"none\"),   guides = TRUE,   pt_size = 2,   pt_alpha = 1,   lbl_size = 3,   heatmap = FALSE,   hm_palette = \"Spectral\",   reverse = FALSE,   title = NULL,   subtitle = NULL,   savename = NULL,   width = 8,   height = 8 )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot simple scatter — plot_scatter","text":"df dataframe; includes signatures xval string/numeric vector; colname x axis yval string/numeric vector; colname y axis label string; colname point labels group string; colname group color rank logical; change metric rank xlabel string; xval description ylabel string; yval description cormethod string; correlation method stats::cor() \"none\" guides logical; T include fitted linear model line pt_size numeric; point size pt_alpha numeric; point alpha value lbl_size numeric; label text size heatmap logical; T underlying heatmap (untested) hm_palette string; RColorBrewer continuous palette name (untested) reverse logical; T reverse axes title string; plot title subtitle string; plot subtitle savename string; filepath save figure width numeric; plot width height numeric; plot height","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot simple scatter — plot_scatter","text":"Simple scatter plot ggplot2","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot simple scatter — plot_scatter","text":"","code":"df <- data.frame(A = 1:10, B = 11:20, C = LETTERS[1:10], D = rep(LETTERS[1:5], each = 2)) plot_scatter(df, xval = \"A\", yval = \"B\", label = \"C\", group = \"D\", title = \"Example Scatter\")"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_scatter_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatter, either metric or rank — plot_scatter_compare","title":"Plot scatter, either metric or rank — plot_scatter_compare","text":"Rubrary::plot_scatter written bit general.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_scatter_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatter, either metric or rank — plot_scatter_compare","text":"","code":"plot_scatter_compare(   set1path,   set2path,   set1lab = \"Set 1\",   set2lab = \"Set 2\",   rank = F,   guides = F,   title = paste0(set1lab, \" vs. \", set2lab),   subtitle = \"\",   savename = NULL )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_scatter_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatter, either metric or rank — plot_scatter_compare","text":"set1path Path 1st set (x axis) set2path Path 2nd set (y axis) set1lab Axis label 1st set (x) set2lab Axis label 2nd set (y) rank Convert sign log p values rank guides logical; Show m=1 linear fit? title Plot title subtitle Plot subtitle savename string; File output full name","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_scatter_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatter, either metric or rank — plot_scatter_compare","text":"Plot comparing DESeq signatures","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_screeplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot screeplot from prcomp — plot_screeplot","title":"Plot screeplot from prcomp — plot_screeplot","text":"Plot screeplot prcomp","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_screeplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot screeplot from prcomp — plot_screeplot","text":"","code":"plot_screeplot(   obj_prcomp,   npcs = ncol(obj_prcomp$x),   label = FALSE,   cum_var_exp = 80,   savename = NULL )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_screeplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot screeplot from prcomp — plot_screeplot","text":"obj_prcomp prcomp function output object npcs integer; # PCs include plot label logical; T % values points cum_var_exp integer; c(1:100), cumulative variance explained threshold savename string; filepath save PNG ","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_screeplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot screeplot from prcomp — plot_screeplot","text":"Screeplot ggplot object","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_screeplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot screeplot from prcomp — plot_screeplot","text":"","code":"data(iris) PCA_iris <- Rubrary::run_PCA(t(iris[,c(1:4)]), screeplot = FALSE) Rubrary::plot_screeplot(PCA_iris) #> ** Cumulative var. exp. >= 80% at PC 2 (95.8%)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot volcano plot — plot_volcano","title":"Plot volcano plot — plot_volcano","text":"Wrapper EnhancedVolcano::EnhancedVolcano() additional caption saving","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot volcano plot — plot_volcano","text":"","code":"plot_volcano(   df_deg,   names = \"gene\",   x = \"log2FoldChange\",   y = \"pvalue\",   pCutoff = 5e-04,   FCcutoff = 1,   xlab_high = NULL,   xlab_low = NULL,   xlab_size = 7,   title = NULL,   subtitle = NULL,   savename = NULL,   height = 12,   width = 16 )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot volcano plot — plot_volcano","text":"df_deg dataframe; test statistics, w/ cols \"names\", \"x\", \"y\" names string; colname df_deg w/ variable names x string; colname log2 fold changes y string; colname nominal/adj p-values pCutoff numeric; value set p value cutoff FCcutoff numeric; value set log fold change cutoff xlab_high string; description high x values xlab_low string; description low x values xlab_size numeric; size x labels title string; plot title subtitle string; plot subtitle savename string; full name file save height numeric; saved plot height width numeric; saved plot width","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot volcano plot — plot_volcano","text":"ggplot2 volcano plot","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_waterfall.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot horizontal waterfall plot (with optional density) — plot_waterfall","title":"Plot horizontal waterfall plot (with optional density) — plot_waterfall","text":"ggtext package installed, fancy version p_enrichment. :)","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_waterfall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot horizontal waterfall plot (with optional density) — plot_waterfall","text":"","code":"plot_waterfall(   sig,   highlight,   rankcol,   rankcol_name = rankcol,   hightolow = FALSE,   vert = FALSE,   label = TRUE,   replab_size = 3.5,   density = FALSE,   hllab = \"Highlight\",   otherlab = \"Others\",   pval = TRUE,   lab_high = NULL,   lab_low = NULL,   lab_size = 6,   legendpos = \"none\",   title = NULL,   colors = c(\"firebrick3\", \"gray\"),   width = 10,   height = 5,   savename = NULL )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_waterfall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot horizontal waterfall plot (with optional density) — plot_waterfall","text":"sig dataframe; name (1st column) + rankcol columns highlight vector; list names highlight waterfall rankcol string; colname values rankcol_name string; descriptive name values hightolow logical; T x-axis decreasing value vert (TESTED) logical; T columns horizontal label logical; T label highlighted values replab_size numeric; size gene label density logical; T output aligned density plot w/ wf hllab string; description highlighted values otherlab string; description non-highlighted values pval logical; T include KS enrichment pvalue lab_high string; descriptor high rankcol values lab_low string; descriptor low rankcol values lab_size numeric; size value annotation label legendpos vector; value btwn 0-1 legend coordinates (ggplot legend.position option) title string; plot title colors vector; two colors, highlight vs. width numeric; width plot height numeric; height plot savename string; filepath save figure ","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_waterfall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot horizontal waterfall plot (with optional density) — plot_waterfall","text":"Waterfall plot ggplot2 object","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_waterfall_hl.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ranked waterfall with genes highlighted — plot_waterfall_hl","title":"Plot ranked waterfall with genes highlighted — plot_waterfall_hl","text":"Revamp Favour's original function","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_waterfall_hl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ranked waterfall with genes highlighted — plot_waterfall_hl","text":"","code":"plot_waterfall_hl(   sig,   rankcol = \"sign_log_p\",   sig_hl,   topn = 200,   rev = F,   toplabel = \"Top SCN\",   label = F,   ylab = \"DESeq Signed log p-values\",   wf_pos = \"Post-Therapy\",   wf_neg = \"Pre-Therapy\",   title = \"DE Genes\",   subtitle = NA,   pval = T,   density = T,   savename = NA )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_waterfall_hl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ranked waterfall with genes highlighted — plot_waterfall_hl","text":"sig df; Ranked signature \"rankcol\" \"gene\" columns rankcol string; column rank sig df sig_hl df; ranked signature genes column 1 topn integer; number genes sig_hl highlight rev logical; reverse bottom n genes sig_hl instead top toplabel string; name highlight group label logical char vector; vector, match length nrow(sig_hl) ylab string; rankcol axis label wf_pos string; label positive side waterfall wf_neg string; label negative side waterfall title string; plot title subtitle string; plot subtitle pval logical; include KS p value? density logcal; include density plot right? savename string; name save plot ","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/plot_waterfall_hl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ranked waterfall with genes highlighted — plot_waterfall_hl","text":"Waterfall plot n genes sig_hl highlighted, ks p value","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/pltAB.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot gene co-expression scatter for genes A vs B — pltAB","title":"Plot gene co-expression scatter for genes A vs B — pltAB","text":"Helper function 'genecoexp_scatter_hyper'","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/pltAB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot gene co-expression scatter for genes A vs B — pltAB","text":"","code":"pltAB(geneB, geneA, hyp_df, sobj, group)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/pltAB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot gene co-expression scatter for genes A vs B — pltAB","text":"geneB string; gene B geneA string; gene hyp_df dataframe; hypergeometric p-value table sobj Seurat object group string; metadata value group ","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/pltAB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot gene co-expression scatter for genes A vs B — pltAB","text":"Scatter plot","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/reload_pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload package by installation path — reload_pkg","title":"Reload package by installation path — reload_pkg","text":"Reload package installation path","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/reload_pkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload package by installation path — reload_pkg","text":"","code":"reload_pkg(pkg = \"Rubrary\")"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/reload_pkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload package by installation path — reload_pkg","text":"pkg string; name package","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/reload_pkg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload package by installation path — reload_pkg","text":"Reloads pkg","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/rotate_varimax.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply varimax rotation to PCA scores — rotate_varimax","title":"Apply varimax rotation to PCA scores — rotate_varimax","text":"StackExchange reference","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/rotate_varimax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply varimax rotation to PCA scores — rotate_varimax","text":"","code":"rotate_varimax(obj_prcomp, ncomp = 2, normalize = TRUE, savename = NULL)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/rotate_varimax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply varimax rotation to PCA scores — rotate_varimax","text":"obj_prcomp prcomp object ncomp integer; number components perform rotation normalize logical; T Kaiser normalization: rows scaled unit length rotation, scaled back afterwards savename string; filepath (ext.) save results ","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/rotate_varimax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply varimax rotation to PCA scores — rotate_varimax","text":"varimax object varimax rotated loadings, standardized scores std_scores, scores scores","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/reference/rotate_varimax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply varimax rotation to PCA scores — rotate_varimax","text":"","code":"data(iris) PCA_iris <- Rubrary::run_PCA(t(iris[,c(1:4)])) #> ** Cumulative var. exp. >= 80% at PC 2 (95.8%)  PCA_iris_varimax <- Rubrary::rotate_varimax(PCA_iris) head(PCA_iris_varimax$scores) #>   Scores        V1         V2 #> 1      1 -1.781033 -0.9640340 #> 2      2 -2.264414  0.2816293 #> 3      3 -2.333941 -0.1238842 #> 4      4 -2.419049  0.1567835 #> 5      5 -1.800465 -1.1641579 #> 6      6 -1.041612 -1.9819204 head(PCA_iris_varimax$loadings) #>       Loadings         V1          V2 #> 1 Sepal.Length  0.9593030 -0.04833591 #> 2  Sepal.Width -0.1445841 -0.98489327 #> 3 Petal.Length  0.9442042  0.30365829 #> 4  Petal.Width  0.9324373  0.25659503"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_DESeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Run DESeq — run_DESeq","title":"Run DESeq — run_DESeq","text":"sure generalizable non OV project related datasets yet...","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_DESeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run DESeq — run_DESeq","text":"","code":"run_DESeq(mtx_rawcts, mtx_annotation, savename = NULL, merged = F, shrink = F)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_DESeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run DESeq — run_DESeq","text":"mtx_rawcts matrix; numeric matrix raw counts mtx_annotation matrix; samples rownames, cols \"Subject\" & \"Condition\" (& \"Batch\" merged) savename string; filename save outputs (ext.) merged logical; T dataset two batches merged shrink logical; apply lfcShrink \"ashr\" results (IMPLEMENTED)","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_DESeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run DESeq — run_DESeq","text":"DESeq results dataframe","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_PCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Run PCA (prcomp wrapper) — run_PCA","title":"Run PCA (prcomp wrapper) — run_PCA","text":"Adapted glab.library::PCA_from_file.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_PCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run PCA (prcomp wrapper) — run_PCA","text":"","code":"run_PCA(   df,   savename = NULL,   summary = FALSE,   center = TRUE,   scale = TRUE,   tol = 0.05,   screeplot = TRUE )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_PCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run PCA (prcomp wrapper) — run_PCA","text":"df (path ) numeric dataframe; samples columns, genes/features rows savename string; filepath (ext.) save PCA scores, loadings, sdev summary logical; output summary info center logical; indicate whether variables shifted zero centered scale logical; indicate whether variables scaled unit variance tol numerical; indicate magnitude components omitted screeplot logical; output + save screeplot?","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_PCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run PCA (prcomp wrapper) — run_PCA","text":"prcomp obj","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_PCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run PCA (prcomp wrapper) — run_PCA","text":"general, Z-score standardization (center = T; scale = T) PCA advised. center = T: PCA maximizes sum--squared deviations origin first PC. Variance maximized data pre-centered. scale = T: one feature varies others, feature dominate resulting principal components. Scaling also result components order magnitude.","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_PCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run PCA (prcomp wrapper) — run_PCA","text":"","code":"data(iris) Rubrary::run_PCA(t(iris[,c(1:4)])) #> ** Cumulative var. exp. >= 80% at PC 2 (95.8%)  #> Standard deviations (1, .., p=4): #> [1] 1.7083611 0.9560494 0.3830886 0.1439265 #>  #> Rotation (n x k) = (4 x 4): #>                     PC1         PC2        PC3        PC4 #> Sepal.Length  0.5210659 -0.37741762  0.7195664  0.2612863 #> Sepal.Width  -0.2693474 -0.92329566 -0.2443818 -0.1235096 #> Petal.Length  0.5804131 -0.02449161 -0.1421264 -0.8014492 #> Petal.Width   0.5648565 -0.06694199 -0.6342727  0.5235971"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_RRHO.html","id":null,"dir":"Reference","previous_headings":"","what":"Run RRHO analysis — run_RRHO","title":"Run RRHO analysis — run_RRHO","text":"Inference amount agreement two sorted lists using Rank-Rank Hypergeometric Overlap test. Outputs RRHO results, hypermatrix heatmap, rank rank scatter, metric scatter.","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_RRHO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run RRHO analysis — run_RRHO","text":"","code":"run_RRHO(   sig1,   sig2,   sig1_name,   sig2_name,   sig1_low = NA,   sig1_high = NA,   sig2_low = NA,   sig2_high = NA,   key = \"gene\",   metric1 = \"sign_log_p\",   metric2 = metric1,   steps = NULL,   savename = NULL,   webtool = TRUE,   BY = FALSE,   hm_method = c(\"ggplot\", \"lattice\"),   palette = \"Spectral\",   waterfall = TRUE,   scatter = TRUE )"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_RRHO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run RRHO analysis — run_RRHO","text":"sig1 string/dataframe; path df sig1, cols key metric1 sig2 string/dataframe; path df sig2, cols key metric2 sig1_name string; description sig1 sig2_name string; description sig2 sig1_low string; description low sig1 values sig1_high string; description high sig1 values sig2_low string; description low sig2 values sig2_high string; description high sig2 values key string; colname corresponding values btwn sigs metric1 string; colname sig1 metric rank metric2 string; colname sig2 metric rank steps integer; RRHO step size savename string; filepath save results (ext.) webtool logical; T output text formatted Graeber RRHO webtool logical; T Benjamini-Yekutieli FDR corrected pvalues hm_method string; make heatmap ggplot geom_raster lattice levelplot palette string; RColorBrewer continuous palette name waterfall logical; T include waterfall subplots (plot_method = \"ggplot\" ) scatter logical; T output metric & rank scatterplot","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_RRHO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run RRHO analysis — run_RRHO","text":"RRHO results","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/run_RRHO.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run RRHO analysis — run_RRHO","text":"Arrows unicode \\u2193 () \\u2191 () want cool low/high descriptions B)","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/split_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Split text into multiple lines — split_line","title":"Split text into multiple lines — split_line","text":"Split text multiple lines","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/split_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split text into multiple lines — split_line","text":"","code":"split_line(text, chars = 40, lines = NULL)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/split_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split text into multiple lines — split_line","text":"text string chars integer; rough # characters per line lines integer; desired # lines","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/split_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split text into multiple lines — split_line","text":"text split lines longer split_nchar","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/split_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split text into multiple lines — split_line","text":"","code":"lipsum <- \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\" writeLines(split_line(lipsum, chars = 50)) #> Lorem ipsum dolor sit amet, consectetur adipiscing elit, #> sed do eiusmod tempor incididunt ut labore #> et dolore magna aliqua. Ut enim ad #> minim veniam, quis nostrud exercitation ullamco laboris #> nisi ut aliquip ex ea commodo consequat. writeLines(split_line(lipsum, lines = 3)) #> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor #> incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, #> quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. writeLines(split_line(\"Short line of text!\")) #> Short line of text! writeLines(split_line(\"Short line of text!\", lines = 2)) #> Short line #> of text!"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/use_pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if package is installed, prompt if not — use_pkg","title":"Check if package is installed, prompt if not — use_pkg","text":"Based https://stackoverflow.com//44660688","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/use_pkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if package is installed, prompt if not — use_pkg","text":"","code":"use_pkg(..., strict = FALSE)"},{"path":"https://liaoyjruby.github.io/Rubrary/reference/use_pkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if package is installed, prompt if not — use_pkg","text":"... string; package(s) check installed strict logical; strict requirements package install?","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/use_pkg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if package is installed, prompt if not — use_pkg","text":"None","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/reference/use_pkg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if package is installed, prompt if not — use_pkg","text":"","code":"use_pkg(\"ggplot2\", \"dplyr\")"},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"improved-0-9-1","dir":"Changelog","previous_headings":"","what":"Improved","title":"Rubrary 0.9.1","text":"GSEA functions: improved name formatting enrichment plot plot_PCA: fixed subtitle non-annotated plots (thanks Duncan :) ) plot_GSEA_barplot: formatting flexibility improvements","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"general-0-9-0","dir":"Changelog","previous_headings":"","what":"General","title":"Rubrary 0.9.0","text":"PCA improvements + associated vignettes scRNA integration assessment metrics GSEA barplot, GSEAsq density plot comparison, associated helper functions","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"new-0-9-0","dir":"Changelog","previous_headings":"","what":"New","title":"Rubrary 0.9.0","text":"plot_GSEAsq_density: plot categorical percentile rank comparison two GSEA squared signatures plot_PCA_biplot: conventional biplot loadings standardized scores format_GSEA_name: cleans MSigDB underscore + caps names bit split_line: splits long text multiple lines based number char lines rotate_varimax: Varimax rotation prcomp output run_LISI: wrapper assess_integration specific LISI run_MixingMetric: wrapper assess_integration specific MixingMetric run_CellMixS: wrapper assess_integration specific cms","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"improved-0-9-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"Rubrary 0.9.0","text":"run_PCA: fix eigenvector / loadings distinction plot_volcano: rewritten terms + args general align better w/ EnhancedVolcano documentation plot_PC_genes -> plot_genes, still defaults filtering PC genes technically gene list can passed filter dataframe plot_waterfall: little smarter place high/low value labels still quite dumb plot_scatter: color group, text options","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"vignettes-0-9-0","dir":"Changelog","previous_headings":"","what":"Vignettes","title":"Rubrary 0.9.0","text":"PCA_Walkthrough: based Lindsey Smith’s PCA tutorial, step step toy dataset PCA including math behind PCA_Quickstart: basic Palmer Penguin demonstration plotting scripts + replication Graeber Beltran PCA DE_Genes & GSEA: previous combined tutorial nows plit two","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"general-0-8-0","dir":"Changelog","previous_headings":"","what":"General","title":"Rubrary 0.8.0","text":"Gene accessing, LISI PCA functions improvements Functional vignettes","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"new-0-8-0","dir":"Changelog","previous_headings":"","what":"New","title":"Rubrary 0.8.0","text":"get_PC_genes: accesses BioMart database genes annotated protein coding filter_PC_genes: filter dataframe specified list genes, possible Seurat::UpdateSymbolList powered gene symbol correcting. Technically isn’t specific protein-coding filtering words list input. Technically specific getting description fields given list BioMart attrs probably add error/warning gene names don’t match, possible Seurat correction? convert_genes: access BioMart database convert gene name format outputs visualization help interpret resulting values","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"improved-0-8-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"Rubrary 0.8.0","text":"run_PCA: additional documentation recommending standardization plot_PCA: accommodation passing prcomp object, custom colors","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"vignettes-0-8-0","dir":"Changelog","previous_headings":"","what":"Vignettes","title":"Rubrary 0.8.0","text":"PCA: changed palmerpenguins dataset actually run output DESeq_GSEA: working DESeq example airway dataset","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"rubrary-070","dir":"Changelog","previous_headings":"","what":"Rubrary 0.7.0","title":"Rubrary 0.7.0","text":"230329 function improvements","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"rubrary-060","dir":"Changelog","previous_headings":"","what":"Rubrary 0.6.0","title":"Rubrary 0.6.0","text":"230323: new GSEA Seurat DimPlot functions & improvements plot_GSEA_pathway plot_dim_set hypergeo_coexp","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"rubrary-050","dir":"Changelog","previous_headings":"","what":"Rubrary 0.5.0","title":"Rubrary 0.5.0","text":"230303: New scRNA hypergeometric p-value plot function genecoexp_scatter_hyper phyper_df pltAB run_RRHO (WIP)","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"rubrary-040","dir":"Changelog","previous_headings":"","what":"Rubrary 0.4.0","title":"Rubrary 0.4.0","text":"230203: new functions plot_waterfall plot_density check_normal calc_sumZscore various fixes","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"rubrary-030","dir":"Changelog","previous_headings":"","what":"Rubrary 0.3.0","title":"Rubrary 0.3.0","text":"New DESeq functions + extras output_DESeq filter_DESeq_PC plot_DESeq_volcano plot_scatter_compare plot_screeplot plot_scatter_mtx (WIP)","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"rubrary-020","dir":"Changelog","previous_headings":"","what":"Rubrary 0.2.0","title":"Rubrary 0.2.0","text":"plot_distribution: Density plot histo","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"rubrary-015","dir":"Changelog","previous_headings":"","what":"Rubrary 0.1.5","title":"Rubrary 0.1.5","text":"Save option “plot_scatter”","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"rubrary-014","dir":"Changelog","previous_headings":"","what":"Rubrary 0.1.4","title":"Rubrary 0.1.4","text":"Optional KS pval plot_waterfall_hl","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"rubrary-013","dir":"Changelog","previous_headings":"","what":"Rubrary 0.1.3","title":"Rubrary 0.1.3","text":"plot_waterfall_hl label outside","code":""},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"rubrary-012","dir":"Changelog","previous_headings":"","what":"Rubrary 0.1.2","title":"Rubrary 0.1.2","text":"Fixed export plot_waterfall_hl.R namespace","code":""},{"path":[]},{"path":"https://liaoyjruby.github.io/Rubrary/news/index.html","id":"rubrary-010","dir":"Changelog","previous_headings":"","what":"Rubrary 0.1.0","title":"Rubrary 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
